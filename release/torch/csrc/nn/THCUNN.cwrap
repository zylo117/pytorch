#include <TH/TH.h>
#include <THC/THC.h>


TH_API void THNN_CudaHalfAbs_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfAbs_updateOutput
  return: void
  cname: THNN_CudaHalfAbs_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaAbs_updateOutput(void*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaAbs_updateOutput
  return: void
  cname: THNN_CudaAbs_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleAbs_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleAbs_updateOutput
  return: void
  cname: THNN_CudaDoubleAbs_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfAbs_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfAbs_updateGradInput
  return: void
  cname: THNN_CudaHalfAbs_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
]]


TH_API void THNN_CudaAbs_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaAbs_updateGradInput
  return: void
  cname: THNN_CudaAbs_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
]]


TH_API void THNN_CudaDoubleAbs_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleAbs_updateGradInput
  return: void
  cname: THNN_CudaDoubleAbs_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
]]


TH_API void THNN_CudaHalfAbsCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfAbsCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfAbsCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaAbsCriterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaAbsCriterion_updateOutput
  return: void
  cname: THNN_CudaAbsCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleAbsCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleAbsCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleAbsCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfAbsCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfAbsCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfAbsCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaAbsCriterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaAbsCriterion_updateGradInput
  return: void
  cname: THNN_CudaAbsCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleAbsCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleAbsCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleAbsCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfBatchNormalization_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, double, double);
[[
  name: CudaHalfBatchNormalization_updateOutput
  return: void
  cname: THNN_CudaHalfBatchNormalization_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input_
    - THCudaHalfTensor* output_
    - type: THCudaHalfTensor*
      name: weight_
      nullable: True
    - type: THCudaHalfTensor*
      name: bias_
      nullable: True
    - type: THCudaHalfTensor*
      name: runningMean_
      nullable: True
    - type: THCudaHalfTensor*
      name: runningVar_
      nullable: True
    - THCudaHalfTensor* saveMean_
    - THCudaHalfTensor* saveStd_
    - bool train
    - double momentum
    - double eps
]]


TH_API void THNN_CudaBatchNormalization_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, double, double);
[[
  name: CudaBatchNormalization_updateOutput
  return: void
  cname: THNN_CudaBatchNormalization_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input_
    - THCudaTensor* output_
    - type: THCudaTensor*
      name: weight_
      nullable: True
    - type: THCudaTensor*
      name: bias_
      nullable: True
    - type: THCudaTensor*
      name: runningMean_
      nullable: True
    - type: THCudaTensor*
      name: runningVar_
      nullable: True
    - THCudaTensor* saveMean_
    - THCudaTensor* saveStd_
    - bool train
    - double momentum
    - double eps
]]


TH_API void THNN_CudaDoubleBatchNormalization_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, double, double);
[[
  name: CudaDoubleBatchNormalization_updateOutput
  return: void
  cname: THNN_CudaDoubleBatchNormalization_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input_
    - THCudaDoubleTensor* output_
    - type: THCudaDoubleTensor*
      name: weight_
      nullable: True
    - type: THCudaDoubleTensor*
      name: bias_
      nullable: True
    - type: THCudaDoubleTensor*
      name: runningMean_
      nullable: True
    - type: THCudaDoubleTensor*
      name: runningVar_
      nullable: True
    - THCudaDoubleTensor* saveMean_
    - THCudaDoubleTensor* saveStd_
    - bool train
    - double momentum
    - double eps
]]


TH_API void THNN_CudaHalfBatchNormalization_backward(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, double, double);
[[
  name: CudaHalfBatchNormalization_backward
  return: void
  cname: THNN_CudaHalfBatchNormalization_backward
  arguments:
    - void* state
    - THCudaHalfTensor* input_
    - THCudaHalfTensor* gradOutput_
    - type: THCudaHalfTensor*
      name: gradInput_
      nullable: True
    - type: THCudaHalfTensor*
      name: gradWeight_
      nullable: True
    - type: THCudaHalfTensor*
      name: gradBias_
      nullable: True
    - type: THCudaHalfTensor*
      name: weight_
      nullable: True
    - type: THCudaHalfTensor*
      name: runningMean_
      nullable: True
    - type: THCudaHalfTensor*
      name: runningVar_
      nullable: True
    - type: THCudaHalfTensor*
      name: saveMean_
      nullable: True
    - type: THCudaHalfTensor*
      name: saveStd_
      nullable: True
    - bool train
    - double scale
    - double eps
]]


TH_API void THNN_CudaBatchNormalization_backward(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, double, double);
[[
  name: CudaBatchNormalization_backward
  return: void
  cname: THNN_CudaBatchNormalization_backward
  arguments:
    - void* state
    - THCudaTensor* input_
    - THCudaTensor* gradOutput_
    - type: THCudaTensor*
      name: gradInput_
      nullable: True
    - type: THCudaTensor*
      name: gradWeight_
      nullable: True
    - type: THCudaTensor*
      name: gradBias_
      nullable: True
    - type: THCudaTensor*
      name: weight_
      nullable: True
    - type: THCudaTensor*
      name: runningMean_
      nullable: True
    - type: THCudaTensor*
      name: runningVar_
      nullable: True
    - type: THCudaTensor*
      name: saveMean_
      nullable: True
    - type: THCudaTensor*
      name: saveStd_
      nullable: True
    - bool train
    - double scale
    - double eps
]]


TH_API void THNN_CudaDoubleBatchNormalization_backward(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, double, double);
[[
  name: CudaDoubleBatchNormalization_backward
  return: void
  cname: THNN_CudaDoubleBatchNormalization_backward
  arguments:
    - void* state
    - THCudaDoubleTensor* input_
    - THCudaDoubleTensor* gradOutput_
    - type: THCudaDoubleTensor*
      name: gradInput_
      nullable: True
    - type: THCudaDoubleTensor*
      name: gradWeight_
      nullable: True
    - type: THCudaDoubleTensor*
      name: gradBias_
      nullable: True
    - type: THCudaDoubleTensor*
      name: weight_
      nullable: True
    - type: THCudaDoubleTensor*
      name: runningMean_
      nullable: True
    - type: THCudaDoubleTensor*
      name: runningVar_
      nullable: True
    - type: THCudaDoubleTensor*
      name: saveMean_
      nullable: True
    - type: THCudaDoubleTensor*
      name: saveStd_
      nullable: True
    - bool train
    - double scale
    - double eps
]]


TH_API void THNN_CudaHalfBCECriterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, THCudaHalfTensor*, bool);
[[
  name: CudaHalfBCECriterion_updateOutput
  return: void
  cname: THNN_CudaHalfBCECriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - bool reduce
]]


TH_API void THNN_CudaBCECriterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, THCudaTensor*, bool);
[[
  name: CudaBCECriterion_updateOutput
  return: void
  cname: THNN_CudaBCECriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - type: THCudaTensor*
      name: weights
      nullable: True
    - bool reduce
]]


TH_API void THNN_CudaDoubleBCECriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, THCudaDoubleTensor*, bool);
[[
  name: CudaDoubleBCECriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleBCECriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - bool reduce
]]


TH_API void THNN_CudaHalfBCECriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, THCudaHalfTensor*, bool);
[[
  name: CudaHalfBCECriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfBCECriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - bool reduce
]]


TH_API void THNN_CudaBCECriterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, THCudaTensor*, bool);
[[
  name: CudaBCECriterion_updateGradInput
  return: void
  cname: THNN_CudaBCECriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - type: THCudaTensor*
      name: weights
      nullable: True
    - bool reduce
]]


TH_API void THNN_CudaDoubleBCECriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, THCudaDoubleTensor*, bool);
[[
  name: CudaDoubleBCECriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleBCECriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - bool reduce
]]


TH_API void THNN_CudaHalfClassNLLCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, bool, THCudaHalfTensor*, THCudaHalfTensor*, int64_t, bool);
[[
  name: CudaHalfClassNLLCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfClassNLLCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - THCudaHalfTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaClassNLLCriterion_updateOutput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, bool, THCudaTensor*, THCudaTensor*, int64_t, bool);
[[
  name: CudaClassNLLCriterion_updateOutput
  return: void
  cname: THNN_CudaClassNLLCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - type: THCudaTensor*
      name: weights
      nullable: True
    - THCudaTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaDoubleClassNLLCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, bool, THCudaDoubleTensor*, THCudaDoubleTensor*, int64_t, bool);
[[
  name: CudaDoubleClassNLLCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleClassNLLCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - THCudaDoubleTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaHalfClassNLLCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, THCudaHalfTensor*, THCudaHalfTensor*, int64_t, bool);
[[
  name: CudaHalfClassNLLCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfClassNLLCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - THCudaHalfTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaClassNLLCriterion_updateGradInput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, bool, THCudaTensor*, THCudaTensor*, int64_t, bool);
[[
  name: CudaClassNLLCriterion_updateGradInput
  return: void
  cname: THNN_CudaClassNLLCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - type: THCudaTensor*
      name: weights
      nullable: True
    - THCudaTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaDoubleClassNLLCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, THCudaDoubleTensor*, THCudaDoubleTensor*, int64_t, bool);
[[
  name: CudaDoubleClassNLLCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleClassNLLCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - THCudaDoubleTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaHalfDistKLDivCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfDistKLDivCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfDistKLDivCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDistKLDivCriterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaDistKLDivCriterion_updateOutput
  return: void
  cname: THNN_CudaDistKLDivCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleDistKLDivCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleDistKLDivCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleDistKLDivCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfDistKLDivCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfDistKLDivCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfDistKLDivCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDistKLDivCriterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaDistKLDivCriterion_updateGradInput
  return: void
  cname: THNN_CudaDistKLDivCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleDistKLDivCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleDistKLDivCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleDistKLDivCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfELU_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float, float, bool);
[[
  name: CudaHalfELU_updateOutput
  return: void
  cname: THNN_CudaHalfELU_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float alpha
    - float scale
    - bool inplace
]]


TH_API void THNN_CudaELU_updateOutput(void*, THCudaTensor*, THCudaTensor*, float, float, bool);
[[
  name: CudaELU_updateOutput
  return: void
  cname: THNN_CudaELU_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float alpha
    - float scale
    - bool inplace
]]


TH_API void THNN_CudaDoubleELU_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool);
[[
  name: CudaDoubleELU_updateOutput
  return: void
  cname: THNN_CudaDoubleELU_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double alpha
    - double scale
    - bool inplace
]]


TH_API void THNN_CudaHalfELU_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfELU_updateGradInput
  return: void
  cname: THNN_CudaHalfELU_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* output
    - float alpha
    - float scale
]]


TH_API void THNN_CudaELU_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaELU_updateGradInput
  return: void
  cname: THNN_CudaELU_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* output
    - float alpha
    - float scale
]]


TH_API void THNN_CudaDoubleELU_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleELU_updateGradInput
  return: void
  cname: THNN_CudaDoubleELU_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* output
    - double alpha
    - double scale
]]


TH_API void THNN_CudaHalfFeatureLPPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float, int, int, bool);
[[
  name: CudaHalfFeatureLPPooling_updateOutput
  return: void
  cname: THNN_CudaHalfFeatureLPPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* inputTH
    - THCudaHalfTensor* outputTH
    - float power
    - int width
    - int stride
    - bool batchMode
]]


TH_API void THNN_CudaFeatureLPPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, float, int, int, bool);
[[
  name: CudaFeatureLPPooling_updateOutput
  return: void
  cname: THNN_CudaFeatureLPPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* inputTH
    - THCudaTensor* outputTH
    - float power
    - int width
    - int stride
    - bool batchMode
]]


TH_API void THNN_CudaDoubleFeatureLPPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, int, int, bool);
[[
  name: CudaDoubleFeatureLPPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleFeatureLPPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* inputTH
    - THCudaDoubleTensor* outputTH
    - double power
    - int width
    - int stride
    - bool batchMode
]]


TH_API void THNN_CudaHalfFeatureLPPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, int, int, bool);
[[
  name: CudaHalfFeatureLPPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfFeatureLPPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutputTH
    - THCudaHalfTensor* inputTH
    - THCudaHalfTensor* outputTH
    - THCudaHalfTensor* gradInputTH
    - float power
    - int width
    - int stride
    - bool batchMode
]]


TH_API void THNN_CudaFeatureLPPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, int, int, bool);
[[
  name: CudaFeatureLPPooling_updateGradInput
  return: void
  cname: THNN_CudaFeatureLPPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutputTH
    - THCudaTensor* inputTH
    - THCudaTensor* outputTH
    - THCudaTensor* gradInputTH
    - float power
    - int width
    - int stride
    - bool batchMode
]]


TH_API void THNN_CudaDoubleFeatureLPPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, int, int, bool);
[[
  name: CudaDoubleFeatureLPPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleFeatureLPPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutputTH
    - THCudaDoubleTensor* inputTH
    - THCudaDoubleTensor* outputTH
    - THCudaDoubleTensor* gradInputTH
    - double power
    - int width
    - int stride
    - bool batchMode
]]


TH_API void THNN_CudaHalfHardTanh_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float, float, bool);
[[
  name: CudaHalfHardTanh_updateOutput
  return: void
  cname: THNN_CudaHalfHardTanh_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float min_val
    - float max_val
    - bool inplace
]]


TH_API void THNN_CudaHardTanh_updateOutput(void*, THCudaTensor*, THCudaTensor*, float, float, bool);
[[
  name: CudaHardTanh_updateOutput
  return: void
  cname: THNN_CudaHardTanh_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float min_val
    - float max_val
    - bool inplace
]]


TH_API void THNN_CudaDoubleHardTanh_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool);
[[
  name: CudaDoubleHardTanh_updateOutput
  return: void
  cname: THNN_CudaDoubleHardTanh_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double min_val
    - double max_val
    - bool inplace
]]


TH_API void THNN_CudaHalfHardTanh_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float, bool);
[[
  name: CudaHalfHardTanh_updateGradInput
  return: void
  cname: THNN_CudaHalfHardTanh_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - float min_val
    - float max_val
    - bool inplace
]]


TH_API void THNN_CudaHardTanh_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float, bool);
[[
  name: CudaHardTanh_updateGradInput
  return: void
  cname: THNN_CudaHardTanh_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - float min_val
    - float max_val
    - bool inplace
]]


TH_API void THNN_CudaDoubleHardTanh_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool);
[[
  name: CudaDoubleHardTanh_updateGradInput
  return: void
  cname: THNN_CudaDoubleHardTanh_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - double min_val
    - double max_val
    - bool inplace
]]


TH_API void THNN_CudaHalfGatedLinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfGatedLinear_updateOutput
  return: void
  cname: THNN_CudaHalfGatedLinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int dim
]]


TH_API void THNN_CudaGatedLinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaGatedLinear_updateOutput
  return: void
  cname: THNN_CudaGatedLinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int dim
]]


TH_API void THNN_CudaDoubleGatedLinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleGatedLinear_updateOutput
  return: void
  cname: THNN_CudaDoubleGatedLinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int dim
]]


TH_API void THNN_CudaHalfGatedLinear_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfGatedLinear_updateGradInput
  return: void
  cname: THNN_CudaHalfGatedLinear_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int dim
]]


TH_API void THNN_CudaGatedLinear_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaGatedLinear_updateGradInput
  return: void
  cname: THNN_CudaGatedLinear_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int dim
]]


TH_API void THNN_CudaDoubleGatedLinear_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleGatedLinear_updateGradInput
  return: void
  cname: THNN_CudaDoubleGatedLinear_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int dim
]]


TH_API void THNN_CudaHalfIm2Col_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfIm2Col_updateOutput
  return: void
  cname: THNN_CudaHalfIm2Col_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaIm2Col_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaIm2Col_updateOutput
  return: void
  cname: THNN_CudaIm2Col_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaDoubleIm2Col_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleIm2Col_updateOutput
  return: void
  cname: THNN_CudaDoubleIm2Col_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaHalfIm2Col_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfIm2Col_updateGradInput
  return: void
  cname: THNN_CudaHalfIm2Col_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int inputHeight
    - int inputWidth
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaIm2Col_updateGradInput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaIm2Col_updateGradInput
  return: void
  cname: THNN_CudaIm2Col_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int inputHeight
    - int inputWidth
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaDoubleIm2Col_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleIm2Col_updateGradInput
  return: void
  cname: THNN_CudaDoubleIm2Col_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int inputHeight
    - int inputWidth
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaHalfCol2Im_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfCol2Im_updateOutput
  return: void
  cname: THNN_CudaHalfCol2Im_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int outputHeight
    - int outputWidth
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaCol2Im_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaCol2Im_updateOutput
  return: void
  cname: THNN_CudaCol2Im_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int outputHeight
    - int outputWidth
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaDoubleCol2Im_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleCol2Im_updateOutput
  return: void
  cname: THNN_CudaDoubleCol2Im_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int outputHeight
    - int outputWidth
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaHalfCol2Im_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfCol2Im_updateGradInput
  return: void
  cname: THNN_CudaHalfCol2Im_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaCol2Im_updateGradInput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaCol2Im_updateGradInput
  return: void
  cname: THNN_CudaCol2Im_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaDoubleCol2Im_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleCol2Im_updateGradInput
  return: void
  cname: THNN_CudaDoubleCol2Im_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int kH
    - int kW
    - int dH
    - int dW
    - int padH
    - int padW
    - int sH
    - int sW
]]


TH_API void THNN_CudaHalfLeakyReLU_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float, bool);
[[
  name: CudaHalfLeakyReLU_updateOutput
  return: void
  cname: THNN_CudaHalfLeakyReLU_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float negval
    - bool inplace
]]


TH_API void THNN_CudaLeakyReLU_updateOutput(void*, THCudaTensor*, THCudaTensor*, float, bool);
[[
  name: CudaLeakyReLU_updateOutput
  return: void
  cname: THNN_CudaLeakyReLU_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float negval
    - bool inplace
]]


TH_API void THNN_CudaDoubleLeakyReLU_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, bool);
[[
  name: CudaDoubleLeakyReLU_updateOutput
  return: void
  cname: THNN_CudaDoubleLeakyReLU_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double negval
    - bool inplace
]]


TH_API void THNN_CudaHalfLeakyReLU_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, bool);
[[
  name: CudaHalfLeakyReLU_updateGradInput
  return: void
  cname: THNN_CudaHalfLeakyReLU_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - float negval
    - bool inplace
]]


TH_API void THNN_CudaLeakyReLU_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, bool);
[[
  name: CudaLeakyReLU_updateGradInput
  return: void
  cname: THNN_CudaLeakyReLU_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - float negval
    - bool inplace
]]


TH_API void THNN_CudaDoubleLeakyReLU_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, bool);
[[
  name: CudaDoubleLeakyReLU_updateGradInput
  return: void
  cname: THNN_CudaDoubleLeakyReLU_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - double negval
    - bool inplace
]]


TH_API void THNN_CudaHalfGRUFused_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfGRUFused_updateOutput
  return: void
  cname: THNN_CudaHalfGRUFused_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* hidden
    - type: THCudaHalfTensor*
      name: bias1
      nullable: True
    - type: THCudaHalfTensor*
      name: bias2
      nullable: True
    - THCudaHalfTensor* hx
    - THCudaHalfTensor* hy
    - THCudaHalfTensor* storage
]]


TH_API void THNN_CudaGRUFused_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaGRUFused_updateOutput
  return: void
  cname: THNN_CudaGRUFused_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* hidden
    - type: THCudaTensor*
      name: bias1
      nullable: True
    - type: THCudaTensor*
      name: bias2
      nullable: True
    - THCudaTensor* hx
    - THCudaTensor* hy
    - THCudaTensor* storage
]]


TH_API void THNN_CudaDoubleGRUFused_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleGRUFused_updateOutput
  return: void
  cname: THNN_CudaDoubleGRUFused_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* hidden
    - type: THCudaDoubleTensor*
      name: bias1
      nullable: True
    - type: THCudaDoubleTensor*
      name: bias2
      nullable: True
    - THCudaDoubleTensor* hx
    - THCudaDoubleTensor* hy
    - THCudaDoubleTensor* storage
]]


TH_API void THNN_CudaHalfGRUFused_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfGRUFused_updateGradInput
  return: void
  cname: THNN_CudaHalfGRUFused_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradInInput
    - THCudaHalfTensor* gradInHidden
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInputHx
    - THCudaHalfTensor* storage
]]


TH_API void THNN_CudaGRUFused_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaGRUFused_updateGradInput
  return: void
  cname: THNN_CudaGRUFused_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradInInput
    - THCudaTensor* gradInHidden
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInputHx
    - THCudaTensor* storage
]]


TH_API void THNN_CudaDoubleGRUFused_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleGRUFused_updateGradInput
  return: void
  cname: THNN_CudaDoubleGRUFused_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradInInput
    - THCudaDoubleTensor* gradInHidden
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInputHx
    - THCudaDoubleTensor* storage
]]


TH_API void THNN_CudaHalfLSTMFused_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfLSTMFused_updateOutput
  return: void
  cname: THNN_CudaHalfLSTMFused_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* hidden
    - type: THCudaHalfTensor*
      name: bias1
      nullable: True
    - type: THCudaHalfTensor*
      name: bias2
      nullable: True
    - THCudaHalfTensor* cx
    - THCudaHalfTensor* hy
    - THCudaHalfTensor* cy
]]


TH_API void THNN_CudaLSTMFused_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaLSTMFused_updateOutput
  return: void
  cname: THNN_CudaLSTMFused_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* hidden
    - type: THCudaTensor*
      name: bias1
      nullable: True
    - type: THCudaTensor*
      name: bias2
      nullable: True
    - THCudaTensor* cx
    - THCudaTensor* hy
    - THCudaTensor* cy
]]


TH_API void THNN_CudaDoubleLSTMFused_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleLSTMFused_updateOutput
  return: void
  cname: THNN_CudaDoubleLSTMFused_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* hidden
    - type: THCudaDoubleTensor*
      name: bias1
      nullable: True
    - type: THCudaDoubleTensor*
      name: bias2
      nullable: True
    - THCudaDoubleTensor* cx
    - THCudaDoubleTensor* hy
    - THCudaDoubleTensor* cy
]]


TH_API void THNN_CudaHalfLSTMFused_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfLSTMFused_updateGradInput
  return: void
  cname: THNN_CudaHalfLSTMFused_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* storage
    - THCudaHalfTensor* gradInGates
    - THCudaHalfTensor* prevC
    - THCudaHalfTensor* cy
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradOutputCell
    - THCudaHalfTensor* gradInputCx
]]


TH_API void THNN_CudaLSTMFused_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaLSTMFused_updateGradInput
  return: void
  cname: THNN_CudaLSTMFused_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* storage
    - THCudaTensor* gradInGates
    - THCudaTensor* prevC
    - THCudaTensor* cy
    - THCudaTensor* gradOutput
    - THCudaTensor* gradOutputCell
    - THCudaTensor* gradInputCx
]]


TH_API void THNN_CudaDoubleLSTMFused_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleLSTMFused_updateGradInput
  return: void
  cname: THNN_CudaDoubleLSTMFused_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* storage
    - THCudaDoubleTensor* gradInGates
    - THCudaDoubleTensor* prevC
    - THCudaDoubleTensor* cy
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradOutputCell
    - THCudaDoubleTensor* gradInputCx
]]


TH_API void THNN_CudaHalfLogSigmoid_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfLogSigmoid_updateOutput
  return: void
  cname: THNN_CudaHalfLogSigmoid_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* buffer
]]


TH_API void THNN_CudaLogSigmoid_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaLogSigmoid_updateOutput
  return: void
  cname: THNN_CudaLogSigmoid_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* buffer
]]


TH_API void THNN_CudaDoubleLogSigmoid_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleLogSigmoid_updateOutput
  return: void
  cname: THNN_CudaDoubleLogSigmoid_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* buffer
]]


TH_API void THNN_CudaHalfLogSigmoid_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfLogSigmoid_updateGradInput
  return: void
  cname: THNN_CudaHalfLogSigmoid_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* buffer
]]


TH_API void THNN_CudaLogSigmoid_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaLogSigmoid_updateGradInput
  return: void
  cname: THNN_CudaLogSigmoid_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* buffer
]]


TH_API void THNN_CudaDoubleLogSigmoid_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleLogSigmoid_updateGradInput
  return: void
  cname: THNN_CudaDoubleLogSigmoid_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* buffer
]]


TH_API void THNN_CudaHalfLookupTable_accGradParameters(void*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, bool, int, float);
[[
  name: CudaHalfLookupTable_accGradParameters
  return: void
  cname: THNN_CudaHalfLookupTable_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaLongTensor* count
    - type: THCudaLongTensor*
      name: sorted
      nullable: True
    - type: THCudaLongTensor*
      name: indices
      nullable: True
    - bool scaleGradByFreq
    - int paddingValue
    - float scale
]]


TH_API void THNN_CudaLookupTable_accGradParameters(void*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, bool, int, float);
[[
  name: CudaLookupTable_accGradParameters
  return: void
  cname: THNN_CudaLookupTable_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaLongTensor* count
    - type: THCudaLongTensor*
      name: sorted
      nullable: True
    - type: THCudaLongTensor*
      name: indices
      nullable: True
    - bool scaleGradByFreq
    - int paddingValue
    - float scale
]]


TH_API void THNN_CudaDoubleLookupTable_accGradParameters(void*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, bool, int, double);
[[
  name: CudaDoubleLookupTable_accGradParameters
  return: void
  cname: THNN_CudaDoubleLookupTable_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaLongTensor* count
    - type: THCudaLongTensor*
      name: sorted
      nullable: True
    - type: THCudaLongTensor*
      name: indices
      nullable: True
    - bool scaleGradByFreq
    - int paddingValue
    - double scale
]]


TH_API void THNN_CudaHalfLookupTable_renorm(void*, THCudaLongTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfLookupTable_renorm
  return: void
  cname: THNN_CudaHalfLookupTable_renorm
  arguments:
    - void* state
    - THCudaLongTensor* idx
    - THCudaHalfTensor* weight
    - float maxNorm
    - float normType
]]


TH_API void THNN_CudaLookupTable_renorm(void*, THCudaLongTensor*, THCudaTensor*, float, float);
[[
  name: CudaLookupTable_renorm
  return: void
  cname: THNN_CudaLookupTable_renorm
  arguments:
    - void* state
    - THCudaLongTensor* idx
    - THCudaTensor* weight
    - float maxNorm
    - float normType
]]


TH_API void THNN_CudaDoubleLookupTable_renorm(void*, THCudaLongTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleLookupTable_renorm
  return: void
  cname: THNN_CudaDoubleLookupTable_renorm
  arguments:
    - void* state
    - THCudaLongTensor* idx
    - THCudaDoubleTensor* weight
    - double maxNorm
    - double normType
]]


TH_API void THNN_CudaHalfLookupTableBag_updateOutput(void*, THCudaLongTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, THCudaLongTensor*);
[[
  name: CudaHalfLookupTableBag_updateOutput
  return: void
  cname: THNN_CudaHalfLookupTableBag_updateOutput
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaLongTensor* offsets
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* output
    - THCudaLongTensor* offset2bag
    - int mode
    - type: THCudaLongTensor*
      name: seq_length
      nullable: True
]]


TH_API void THNN_CudaLookupTableBag_updateOutput(void*, THCudaLongTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, THCudaLongTensor*);
[[
  name: CudaLookupTableBag_updateOutput
  return: void
  cname: THNN_CudaLookupTableBag_updateOutput
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaLongTensor* offsets
    - THCudaTensor* weight
    - THCudaTensor* output
    - THCudaLongTensor* offset2bag
    - int mode
    - type: THCudaLongTensor*
      name: seq_length
      nullable: True
]]


TH_API void THNN_CudaDoubleLookupTableBag_updateOutput(void*, THCudaLongTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, THCudaLongTensor*);
[[
  name: CudaDoubleLookupTableBag_updateOutput
  return: void
  cname: THNN_CudaDoubleLookupTableBag_updateOutput
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaLongTensor* offsets
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* output
    - THCudaLongTensor* offset2bag
    - int mode
    - type: THCudaLongTensor*
      name: seq_length
      nullable: True
]]


TH_API void THNN_CudaHalfLookupTableBag_accGradParameters(void*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, bool, int, THCudaLongTensor*, float);
[[
  name: CudaHalfLookupTableBag_accGradParameters
  return: void
  cname: THNN_CudaHalfLookupTableBag_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaLongTensor* offset2bag
    - THCudaLongTensor* count
    - THCudaLongTensor* sortedIndices
    - THCudaLongTensor* origIndices
    - bool scaleGradByFreq
    - int mode
    - type: THCudaLongTensor*
      name: seq_length
      nullable: True
    - float scale_
]]


TH_API void THNN_CudaLookupTableBag_accGradParameters(void*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, bool, int, THCudaLongTensor*, float);
[[
  name: CudaLookupTableBag_accGradParameters
  return: void
  cname: THNN_CudaLookupTableBag_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaLongTensor* offset2bag
    - THCudaLongTensor* count
    - THCudaLongTensor* sortedIndices
    - THCudaLongTensor* origIndices
    - bool scaleGradByFreq
    - int mode
    - type: THCudaLongTensor*
      name: seq_length
      nullable: True
    - float scale_
]]


TH_API void THNN_CudaDoubleLookupTableBag_accGradParameters(void*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaLongTensor*, bool, int, THCudaLongTensor*, double);
[[
  name: CudaDoubleLookupTableBag_accGradParameters
  return: void
  cname: THNN_CudaDoubleLookupTableBag_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaLongTensor* offset2bag
    - THCudaLongTensor* count
    - THCudaLongTensor* sortedIndices
    - THCudaLongTensor* origIndices
    - bool scaleGradByFreq
    - int mode
    - type: THCudaLongTensor*
      name: seq_length
      nullable: True
    - double scale_
]]


TH_API void THNN_CudaHalfL1Cost_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfL1Cost_updateOutput
  return: void
  cname: THNN_CudaHalfL1Cost_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaL1Cost_updateOutput(void*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaL1Cost_updateOutput
  return: void
  cname: THNN_CudaL1Cost_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleL1Cost_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleL1Cost_updateOutput
  return: void
  cname: THNN_CudaDoubleL1Cost_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfL1Cost_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfL1Cost_updateGradInput
  return: void
  cname: THNN_CudaHalfL1Cost_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - type: THCudaHalfTensor*
      name: gradOutput
      nullable: True
    - THCudaHalfTensor* gradInput
]]


TH_API void THNN_CudaL1Cost_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaL1Cost_updateGradInput
  return: void
  cname: THNN_CudaL1Cost_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - type: THCudaTensor*
      name: gradOutput
      nullable: True
    - THCudaTensor* gradInput
]]


TH_API void THNN_CudaDoubleL1Cost_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleL1Cost_updateGradInput
  return: void
  cname: THNN_CudaDoubleL1Cost_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - type: THCudaDoubleTensor*
      name: gradOutput
      nullable: True
    - THCudaDoubleTensor* gradInput
]]


TH_API void THNN_CudaHalfMarginCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, float);
[[
  name: CudaHalfMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - float margin
]]


TH_API void THNN_CudaMarginCriterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, float);
[[
  name: CudaMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - float margin
]]


TH_API void THNN_CudaDoubleMarginCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, double);
[[
  name: CudaDoubleMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - double margin
]]


TH_API void THNN_CudaHalfMarginCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, float);
[[
  name: CudaHalfMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - float margin
]]


TH_API void THNN_CudaMarginCriterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, float);
[[
  name: CudaMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradInput
    - bool sizeAverage
    - float margin
]]


TH_API void THNN_CudaDoubleMarginCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, double);
[[
  name: CudaDoubleMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - double margin
]]


TH_API void THNN_CudaHalfMSECriterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfMSECriterion_updateOutput
  return: void
  cname: THNN_CudaHalfMSECriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaMSECriterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaMSECriterion_updateOutput
  return: void
  cname: THNN_CudaMSECriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleMSECriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleMSECriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleMSECriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfMSECriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfMSECriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfMSECriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaMSECriterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaMSECriterion_updateGradInput
  return: void
  cname: THNN_CudaMSECriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleMSECriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleMSECriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleMSECriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfMultiLabelMarginCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfMultiLabelMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfMultiLabelMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* output
    - THCudaHalfTensor* istarget
    - bool sizeaverage
    - bool reduce
]]


TH_API void THNN_CudaMultiLabelMarginCriterion_updateOutput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaMultiLabelMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaMultiLabelMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* output
    - THCudaTensor* istarget
    - bool sizeaverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleMultiLabelMarginCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleMultiLabelMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleMultiLabelMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* istarget
    - bool sizeaverage
    - bool reduce
]]


TH_API void THNN_CudaHalfMultiLabelMarginCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfMultiLabelMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfMultiLabelMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* istarget
    - bool sizeaverage
    - bool reduce
]]


TH_API void THNN_CudaMultiLabelMarginCriterion_updateGradInput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaMultiLabelMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaMultiLabelMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* istarget
    - bool sizeaverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleMultiLabelMarginCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleMultiLabelMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleMultiLabelMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* istarget
    - bool sizeaverage
    - bool reduce
]]


TH_API void THNN_CudaHalfMultiMarginCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, bool, int, THCudaHalfTensor*, float, bool);
[[
  name: CudaHalfMultiMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfMultiMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - int p
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - float margin
    - bool reduce
]]


TH_API void THNN_CudaMultiMarginCriterion_updateOutput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, bool, int, THCudaTensor*, float, bool);
[[
  name: CudaMultiMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaMultiMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - int p
    - type: THCudaTensor*
      name: weights
      nullable: True
    - float margin
    - bool reduce
]]


TH_API void THNN_CudaDoubleMultiMarginCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, bool, int, THCudaDoubleTensor*, double, bool);
[[
  name: CudaDoubleMultiMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleMultiMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - int p
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - double margin
    - bool reduce
]]


TH_API void THNN_CudaHalfMultiMarginCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, int, THCudaHalfTensor*, float, bool);
[[
  name: CudaHalfMultiMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfMultiMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - int p
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - float margin
    - bool reduce
]]


TH_API void THNN_CudaMultiMarginCriterion_updateGradInput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, bool, int, THCudaTensor*, float, bool);
[[
  name: CudaMultiMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaMultiMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - int p
    - type: THCudaTensor*
      name: weights
      nullable: True
    - float margin
    - bool reduce
]]


TH_API void THNN_CudaDoubleMultiMarginCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, int, THCudaDoubleTensor*, double, bool);
[[
  name: CudaDoubleMultiMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleMultiMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - int p
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - double margin
    - bool reduce
]]


TH_API void THNN_CudaHalfPReLU_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfPReLU_updateOutput
  return: void
  cname: THNN_CudaHalfPReLU_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
]]


TH_API void THNN_CudaPReLU_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaPReLU_updateOutput
  return: void
  cname: THNN_CudaPReLU_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
]]


TH_API void THNN_CudaDoublePReLU_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoublePReLU_updateOutput
  return: void
  cname: THNN_CudaDoublePReLU_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
]]


TH_API void THNN_CudaHalfPReLU_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfPReLU_updateGradInput
  return: void
  cname: THNN_CudaHalfPReLU_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
]]


TH_API void THNN_CudaPReLU_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaPReLU_updateGradInput
  return: void
  cname: THNN_CudaPReLU_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
]]


TH_API void THNN_CudaDoublePReLU_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoublePReLU_updateGradInput
  return: void
  cname: THNN_CudaDoublePReLU_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
]]


TH_API void THNN_CudaHalfPReLU_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float);
[[
  name: CudaHalfPReLU_accGradParameters
  return: void
  cname: THNN_CudaHalfPReLU_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* gradWeight
    - float scale
]]


TH_API void THNN_CudaPReLU_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float);
[[
  name: CudaPReLU_accGradParameters
  return: void
  cname: THNN_CudaPReLU_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* gradWeight
    - float scale
]]


TH_API void THNN_CudaDoublePReLU_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double);
[[
  name: CudaDoublePReLU_accGradParameters
  return: void
  cname: THNN_CudaDoublePReLU_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* gradWeight
    - double scale
]]


TH_API void THNN_CudaHalfSmoothL1Criterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfSmoothL1Criterion_updateOutput
  return: void
  cname: THNN_CudaHalfSmoothL1Criterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaSmoothL1Criterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaSmoothL1Criterion_updateOutput
  return: void
  cname: THNN_CudaSmoothL1Criterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleSmoothL1Criterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleSmoothL1Criterion_updateOutput
  return: void
  cname: THNN_CudaDoubleSmoothL1Criterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfSmoothL1Criterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfSmoothL1Criterion_updateGradInput
  return: void
  cname: THNN_CudaHalfSmoothL1Criterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaSmoothL1Criterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaSmoothL1Criterion_updateGradInput
  return: void
  cname: THNN_CudaSmoothL1Criterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleSmoothL1Criterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleSmoothL1Criterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleSmoothL1Criterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfSparseLinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSparseLinear_updateOutput
  return: void
  cname: THNN_CudaHalfSparseLinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
]]


TH_API void THNN_CudaSparseLinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSparseLinear_updateOutput
  return: void
  cname: THNN_CudaSparseLinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - THCudaTensor* bias
]]


TH_API void THNN_CudaDoubleSparseLinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSparseLinear_updateOutput
  return: void
  cname: THNN_CudaDoubleSparseLinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
]]


TH_API void THNN_CudaHalfSparseLinear_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfSparseLinear_accGradParameters
  return: void
  cname: THNN_CudaHalfSparseLinear_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaSparseLinear_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaSparseLinear_accGradParameters
  return: void
  cname: THNN_CudaSparseLinear_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* weight
    - THCudaTensor* bias
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaDoubleSparseLinear_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleSparseLinear_accGradParameters
  return: void
  cname: THNN_CudaDoubleSparseLinear_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - double weightDecay
    - double scale
]]


TH_API void THNN_CudaHalfSparseLinear_legacyUpdateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSparseLinear_legacyUpdateOutput
  return: void
  cname: THNN_CudaHalfSparseLinear_legacyUpdateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
]]


TH_API void THNN_CudaSparseLinear_legacyUpdateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSparseLinear_legacyUpdateOutput
  return: void
  cname: THNN_CudaSparseLinear_legacyUpdateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - THCudaTensor* bias
]]


TH_API void THNN_CudaDoubleSparseLinear_legacyUpdateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSparseLinear_legacyUpdateOutput
  return: void
  cname: THNN_CudaDoubleSparseLinear_legacyUpdateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
]]


TH_API void THNN_CudaHalfSparseLinear_legacyAccGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfSparseLinear_legacyAccGradParameters
  return: void
  cname: THNN_CudaHalfSparseLinear_legacyAccGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaSparseLinear_legacyAccGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaSparseLinear_legacyAccGradParameters
  return: void
  cname: THNN_CudaSparseLinear_legacyAccGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* weight
    - THCudaTensor* bias
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaDoubleSparseLinear_legacyAccGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleSparseLinear_legacyAccGradParameters
  return: void
  cname: THNN_CudaDoubleSparseLinear_legacyAccGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - double weightDecay
    - double scale
]]


TH_API void THNN_CudaHalfSparseLinear_zeroGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSparseLinear_zeroGradParameters
  return: void
  cname: THNN_CudaHalfSparseLinear_zeroGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* lastInput
]]


TH_API void THNN_CudaSparseLinear_zeroGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSparseLinear_zeroGradParameters
  return: void
  cname: THNN_CudaSparseLinear_zeroGradParameters
  arguments:
    - void* state
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* lastInput
]]


TH_API void THNN_CudaDoubleSparseLinear_zeroGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSparseLinear_zeroGradParameters
  return: void
  cname: THNN_CudaDoubleSparseLinear_zeroGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* lastInput
]]


TH_API void THNN_CudaHalfSparseLinear_updateParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float);
[[
  name: CudaHalfSparseLinear_updateParameters
  return: void
  cname: THNN_CudaHalfSparseLinear_updateParameters
  arguments:
    - void* state
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* lastInput
    - float learningRate
]]


TH_API void THNN_CudaSparseLinear_updateParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float);
[[
  name: CudaSparseLinear_updateParameters
  return: void
  cname: THNN_CudaSparseLinear_updateParameters
  arguments:
    - void* state
    - THCudaTensor* weight
    - THCudaTensor* bias
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* lastInput
    - float learningRate
]]


TH_API void THNN_CudaDoubleSparseLinear_updateParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double);
[[
  name: CudaDoubleSparseLinear_updateParameters
  return: void
  cname: THNN_CudaDoubleSparseLinear_updateParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* lastInput
    - double learningRate
]]


TH_API void THNN_CudaHalfIndexLinear_updateOutput(void*, THCudaLongTensor*, int64_t, THCudaHalfTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfIndexLinear_updateOutput
  return: void
  cname: THNN_CudaHalfIndexLinear_updateOutput
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaHalfTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - THCudaHalfTensor* normalizedValues
    - int train
]]


TH_API void THNN_CudaIndexLinear_updateOutput(void*, THCudaLongTensor*, int64_t, THCudaTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaIndexLinear_updateOutput
  return: void
  cname: THNN_CudaIndexLinear_updateOutput
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaTensor* output
    - THCudaTensor* weight
    - THCudaTensor* bias
    - THCudaTensor* normalizedValues
    - int train
]]


TH_API void THNN_CudaDoubleIndexLinear_updateOutput(void*, THCudaLongTensor*, int64_t, THCudaDoubleTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleIndexLinear_updateOutput
  return: void
  cname: THNN_CudaDoubleIndexLinear_updateOutput
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaDoubleTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - THCudaDoubleTensor* normalizedValues
    - int train
]]


TH_API void THNN_CudaHalfIndexLinear_accGradParameters(void*, THCudaLongTensor*, int64_t, THCudaHalfTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfIndexLinear_accGradParameters
  return: void
  cname: THNN_CudaHalfIndexLinear_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaHalfTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - THCudaHalfTensor* valuesBuffer
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaIndexLinear_accGradParameters(void*, THCudaLongTensor*, int64_t, THCudaTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaIndexLinear_accGradParameters
  return: void
  cname: THNN_CudaIndexLinear_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* weight
    - THCudaTensor* bias
    - THCudaTensor* valuesBuffer
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaDoubleIndexLinear_accGradParameters(void*, THCudaLongTensor*, int64_t, THCudaDoubleTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleIndexLinear_accGradParameters
  return: void
  cname: THNN_CudaDoubleIndexLinear_accGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaDoubleTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - THCudaDoubleTensor* valuesBuffer
    - double weightDecay
    - double scale
]]


TH_API void THNN_CudaHalfIndexLinear_accUpdateGradParameters(void*, THCudaLongTensor*, int64_t, THCudaHalfTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfIndexLinear_accUpdateGradParameters
  return: void
  cname: THNN_CudaHalfIndexLinear_accUpdateGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaHalfTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaIndexLinear_accUpdateGradParameters(void*, THCudaLongTensor*, int64_t, THCudaTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaIndexLinear_accUpdateGradParameters
  return: void
  cname: THNN_CudaIndexLinear_accUpdateGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaTensor* gradOutput
    - THCudaTensor* weight
    - THCudaTensor* bias
    - float weightDecay
    - float scale
]]


TH_API void THNN_CudaDoubleIndexLinear_accUpdateGradParameters(void*, THCudaLongTensor*, int64_t, THCudaDoubleTensor*, THCudaLongTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleIndexLinear_accUpdateGradParameters
  return: void
  cname: THNN_CudaDoubleIndexLinear_accUpdateGradParameters
  arguments:
    - void* state
    - THCudaLongTensor* keys
    - int64_t keysOffset
    - THCudaDoubleTensor* values
    - THCudaLongTensor* sizes
    - THCudaLongTensor* cumSumSizes
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - double weightDecay
    - double scale
]]


TH_API void THNN_CudaHalfIndexLinear_updateParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, THCudaLongTensor*, int64_t, float, float);
[[
  name: CudaHalfIndexLinear_updateParameters
  return: void
  cname: THNN_CudaHalfIndexLinear_updateParameters
  arguments:
    - void* state
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - THCudaLongTensor* runningKeys
    - THCudaLongTensor* cumSumSizes
    - int64_t keysOffset
    - float weightDecay
    - float learningRate
]]


TH_API void THNN_CudaIndexLinear_updateParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, THCudaLongTensor*, int64_t, float, float);
[[
  name: CudaIndexLinear_updateParameters
  return: void
  cname: THNN_CudaIndexLinear_updateParameters
  arguments:
    - void* state
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* weight
    - THCudaTensor* bias
    - THCudaLongTensor* runningKeys
    - THCudaLongTensor* cumSumSizes
    - int64_t keysOffset
    - float weightDecay
    - float learningRate
]]


TH_API void THNN_CudaDoubleIndexLinear_updateParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaLongTensor*, int64_t, double, double);
[[
  name: CudaDoubleIndexLinear_updateParameters
  return: void
  cname: THNN_CudaDoubleIndexLinear_updateParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - THCudaLongTensor* runningKeys
    - THCudaLongTensor* cumSumSizes
    - int64_t keysOffset
    - double weightDecay
    - double learningRate
]]


TH_API void THNN_CudaHalfSpatialAdaptiveMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaHalfSpatialAdaptiveMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialAdaptiveMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaSpatialAdaptiveMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaSpatialAdaptiveMaxPooling_updateOutput
  return: void
  cname: THNN_CudaSpatialAdaptiveMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaDoubleSpatialAdaptiveMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaDoubleSpatialAdaptiveMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialAdaptiveMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaHalfSpatialAdaptiveMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*);
[[
  name: CudaHalfSpatialAdaptiveMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialAdaptiveMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaSpatialAdaptiveMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*);
[[
  name: CudaSpatialAdaptiveMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialAdaptiveMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaDoubleSpatialAdaptiveMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*);
[[
  name: CudaDoubleSpatialAdaptiveMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialAdaptiveMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaHalfSpatialAdaptiveAveragePooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int);
[[
  name: CudaHalfSpatialAdaptiveAveragePooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialAdaptiveAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaSpatialAdaptiveAveragePooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int);
[[
  name: CudaSpatialAdaptiveAveragePooling_updateOutput
  return: void
  cname: THNN_CudaSpatialAdaptiveAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaDoubleSpatialAdaptiveAveragePooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int);
[[
  name: CudaDoubleSpatialAdaptiveAveragePooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialAdaptiveAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaHalfSpatialAdaptiveAveragePooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSpatialAdaptiveAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialAdaptiveAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
]]


TH_API void THNN_CudaSpatialAdaptiveAveragePooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSpatialAdaptiveAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialAdaptiveAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
]]


TH_API void THNN_CudaDoubleSpatialAdaptiveAveragePooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSpatialAdaptiveAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialAdaptiveAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
]]


TH_API void THNN_CudaHalfSpatialAveragePooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, bool, bool);
[[
  name: CudaHalfSpatialAveragePooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaSpatialAveragePooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, bool, bool);
[[
  name: CudaSpatialAveragePooling_updateOutput
  return: void
  cname: THNN_CudaSpatialAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaDoubleSpatialAveragePooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, bool, bool);
[[
  name: CudaDoubleSpatialAveragePooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaHalfSpatialAveragePooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, bool, bool);
[[
  name: CudaHalfSpatialAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaSpatialAveragePooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, bool, bool);
[[
  name: CudaSpatialAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaDoubleSpatialAveragePooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, bool, bool);
[[
  name: CudaDoubleSpatialAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaHalfSpatialClassNLLCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, bool, THCudaHalfTensor*, THCudaHalfTensor*, int64_t, bool);
[[
  name: CudaHalfSpatialClassNLLCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialClassNLLCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - THCudaHalfTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaSpatialClassNLLCriterion_updateOutput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, bool, THCudaTensor*, THCudaTensor*, int64_t, bool);
[[
  name: CudaSpatialClassNLLCriterion_updateOutput
  return: void
  cname: THNN_CudaSpatialClassNLLCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - type: THCudaTensor*
      name: weights
      nullable: True
    - THCudaTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaDoubleSpatialClassNLLCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, bool, THCudaDoubleTensor*, THCudaDoubleTensor*, int64_t, bool);
[[
  name: CudaDoubleSpatialClassNLLCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialClassNLLCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - THCudaDoubleTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaHalfSpatialClassNLLCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaLongTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, THCudaHalfTensor*, THCudaHalfTensor*, int64_t, bool);
[[
  name: CudaHalfSpatialClassNLLCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialClassNLLCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaLongTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - type: THCudaHalfTensor*
      name: weights
      nullable: True
    - THCudaHalfTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaSpatialClassNLLCriterion_updateGradInput(void*, THCudaTensor*, THCudaLongTensor*, THCudaTensor*, THCudaTensor*, bool, THCudaTensor*, THCudaTensor*, int64_t, bool);
[[
  name: CudaSpatialClassNLLCriterion_updateGradInput
  return: void
  cname: THNN_CudaSpatialClassNLLCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaLongTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - type: THCudaTensor*
      name: weights
      nullable: True
    - THCudaTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaDoubleSpatialClassNLLCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaLongTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, THCudaDoubleTensor*, THCudaDoubleTensor*, int64_t, bool);
[[
  name: CudaDoubleSpatialClassNLLCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialClassNLLCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaLongTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - type: THCudaDoubleTensor*
      name: weights
      nullable: True
    - THCudaDoubleTensor* total_weight
    - int64_t ignore_index
    - bool reduce
]]


TH_API void THNN_CudaHalfSpatialConvolutionLocal_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t);
[[
  name: CudaHalfSpatialConvolutionLocal_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialConvolutionLocal_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
]]


TH_API void THNN_CudaSpatialConvolutionLocal_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t);
[[
  name: CudaSpatialConvolutionLocal_updateOutput
  return: void
  cname: THNN_CudaSpatialConvolutionLocal_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - THCudaTensor* bias
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
]]


TH_API void THNN_CudaDoubleSpatialConvolutionLocal_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t);
[[
  name: CudaDoubleSpatialConvolutionLocal_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialConvolutionLocal_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
]]


TH_API void THNN_CudaHalfSpatialConvolutionLocal_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t);
[[
  name: CudaHalfSpatialConvolutionLocal_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialConvolutionLocal_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
]]


TH_API void THNN_CudaSpatialConvolutionLocal_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t);
[[
  name: CudaSpatialConvolutionLocal_updateGradInput
  return: void
  cname: THNN_CudaSpatialConvolutionLocal_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
]]


TH_API void THNN_CudaDoubleSpatialConvolutionLocal_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t);
[[
  name: CudaDoubleSpatialConvolutionLocal_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialConvolutionLocal_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
]]


TH_API void THNN_CudaHalfSpatialConvolutionLocal_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t, float);
[[
  name: CudaHalfSpatialConvolutionLocal_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialConvolutionLocal_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
    - float scale
]]


TH_API void THNN_CudaSpatialConvolutionLocal_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t, float);
[[
  name: CudaSpatialConvolutionLocal_accGradParameters
  return: void
  cname: THNN_CudaSpatialConvolutionLocal_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
    - float scale
]]


TH_API void THNN_CudaDoubleSpatialConvolutionLocal_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int64_t, int64_t, int64_t, int64_t, double);
[[
  name: CudaDoubleSpatialConvolutionLocal_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialConvolutionLocal_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int64_t inputWidth
    - int64_t inputHeight
    - int64_t outputWidth
    - int64_t outputHeight
    - double scale
]]


TH_API void THNN_CudaHalfSpatialConvolutionMM_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialConvolutionMM_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialConvolutionMM_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
]]


TH_API void THNN_CudaSpatialConvolutionMM_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int);
[[
  name: CudaSpatialConvolutionMM_updateOutput
  return: void
  cname: THNN_CudaSpatialConvolutionMM_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
]]


TH_API void THNN_CudaDoubleSpatialConvolutionMM_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialConvolutionMM_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialConvolutionMM_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
]]


TH_API void THNN_CudaHalfSpatialConvolutionMM_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialConvolutionMM_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialConvolutionMM_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
]]


TH_API void THNN_CudaSpatialConvolutionMM_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int);
[[
  name: CudaSpatialConvolutionMM_updateGradInput
  return: void
  cname: THNN_CudaSpatialConvolutionMM_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
]]


TH_API void THNN_CudaDoubleSpatialConvolutionMM_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialConvolutionMM_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialConvolutionMM_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
]]


TH_API void THNN_CudaHalfSpatialConvolutionMM_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, float);
[[
  name: CudaHalfSpatialConvolutionMM_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialConvolutionMM_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - float scale
]]


TH_API void THNN_CudaSpatialConvolutionMM_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, float);
[[
  name: CudaSpatialConvolutionMM_accGradParameters
  return: void
  cname: THNN_CudaSpatialConvolutionMM_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - float scale
]]


TH_API void THNN_CudaDoubleSpatialConvolutionMM_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, double);
[[
  name: CudaDoubleSpatialConvolutionMM_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialConvolutionMM_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - double scale
]]


TH_API void THNN_CudaHalfSpatialDepthwiseConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialDepthwiseConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialDepthwiseConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaSpatialDepthwiseConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialDepthwiseConvolution_updateOutput
  return: void
  cname: THNN_CudaSpatialDepthwiseConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleSpatialDepthwiseConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialDepthwiseConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialDepthwiseConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfSpatialDepthwiseConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialDepthwiseConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialDepthwiseConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaSpatialDepthwiseConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialDepthwiseConvolution_updateGradInput
  return: void
  cname: THNN_CudaSpatialDepthwiseConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleSpatialDepthwiseConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialDepthwiseConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialDepthwiseConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfSpatialDepthwiseConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialDepthwiseConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialDepthwiseConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaSpatialDepthwiseConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialDepthwiseConvolution_accGradParameters
  return: void
  cname: THNN_CudaSpatialDepthwiseConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleSpatialDepthwiseConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialDepthwiseConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialDepthwiseConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfSpatialCrossMapLRN_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, float, float, float);
[[
  name: CudaHalfSpatialCrossMapLRN_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialCrossMapLRN_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* scale
    - int size
    - float alpha
    - float beta
    - float k
]]


TH_API void THNN_CudaSpatialCrossMapLRN_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, float, float, float);
[[
  name: CudaSpatialCrossMapLRN_updateOutput
  return: void
  cname: THNN_CudaSpatialCrossMapLRN_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* scale
    - int size
    - float alpha
    - float beta
    - float k
]]


TH_API void THNN_CudaDoubleSpatialCrossMapLRN_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, double, double, double);
[[
  name: CudaDoubleSpatialCrossMapLRN_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialCrossMapLRN_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* scale
    - int size
    - double alpha
    - double beta
    - double k
]]


TH_API void THNN_CudaHalfSpatialCrossMapLRN_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, float, float, float);
[[
  name: CudaHalfSpatialCrossMapLRN_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialCrossMapLRN_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* scale
    - THCudaHalfTensor* output
    - int size
    - float alpha
    - float beta
    - float k
]]


TH_API void THNN_CudaSpatialCrossMapLRN_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, float, float, float);
[[
  name: CudaSpatialCrossMapLRN_updateGradInput
  return: void
  cname: THNN_CudaSpatialCrossMapLRN_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* scale
    - THCudaTensor* output
    - int size
    - float alpha
    - float beta
    - float k
]]


TH_API void THNN_CudaDoubleSpatialCrossMapLRN_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, double, double, double);
[[
  name: CudaDoubleSpatialCrossMapLRN_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialCrossMapLRN_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* scale
    - THCudaDoubleTensor* output
    - int size
    - double alpha
    - double beta
    - double k
]]


TH_API void THNN_CudaHalfSpatialDilatedConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaSpatialDilatedConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaSpatialDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleSpatialDilatedConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfSpatialDilatedConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaSpatialDilatedConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaSpatialDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleSpatialDilatedConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfSpatialDilatedConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, float);
[[
  name: CudaHalfSpatialDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - float scale
]]


TH_API void THNN_CudaSpatialDilatedConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, float);
[[
  name: CudaSpatialDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaSpatialDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - float scale
]]


TH_API void THNN_CudaDoubleSpatialDilatedConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, double);
[[
  name: CudaDoubleSpatialDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - double scale
]]


TH_API void THNN_CudaHalfSpatialFullDilatedConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialFullDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialFullDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaSpatialFullDilatedConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialFullDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaSpatialFullDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleSpatialFullDilatedConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialFullDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialFullDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfSpatialFullDilatedConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialFullDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialFullDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaSpatialFullDilatedConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialFullDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaSpatialFullDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleSpatialFullDilatedConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialFullDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialFullDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfSpatialFullDilatedConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaHalfSpatialFullDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialFullDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaSpatialFullDilatedConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaSpatialFullDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaSpatialFullDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaDoubleSpatialFullDilatedConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, double);
[[
  name: CudaDoubleSpatialFullDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialFullDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - int adjW
    - int adjH
    - double scale
]]


TH_API void THNN_CudaHalfSpatialDilatedMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfSpatialDilatedMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialDilatedMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - bool ceil_mode
]]


TH_API void THNN_CudaSpatialDilatedMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaSpatialDilatedMaxPooling_updateOutput
  return: void
  cname: THNN_CudaSpatialDilatedMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - bool ceil_mode
]]


TH_API void THNN_CudaDoubleSpatialDilatedMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleSpatialDilatedMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialDilatedMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - bool ceil_mode
]]


TH_API void THNN_CudaHalfSpatialDilatedMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfSpatialDilatedMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialDilatedMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - bool ceil_mode
]]


TH_API void THNN_CudaSpatialDilatedMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaSpatialDilatedMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialDilatedMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - bool ceil_mode
]]


TH_API void THNN_CudaDoubleSpatialDilatedMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleSpatialDilatedMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialDilatedMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int dilationW
    - int dilationH
    - bool ceil_mode
]]


TH_API void THNN_CudaHalfSpatialFractionalMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, THCudaLongTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSpatialFractionalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialFractionalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int outputW
    - int outputH
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
    - THCudaHalfTensor* randomSamples
]]


TH_API void THNN_CudaSpatialFractionalMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, THCudaLongTensor*, THCudaTensor*);
[[
  name: CudaSpatialFractionalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaSpatialFractionalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int outputW
    - int outputH
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
    - THCudaTensor* randomSamples
]]


TH_API void THNN_CudaDoubleSpatialFractionalMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, THCudaLongTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSpatialFractionalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialFractionalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int outputW
    - int outputH
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
    - THCudaDoubleTensor* randomSamples
]]


TH_API void THNN_CudaHalfSpatialFractionalMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, THCudaLongTensor*);
[[
  name: CudaHalfSpatialFractionalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialFractionalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int outputW
    - int outputH
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaSpatialFractionalMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, THCudaLongTensor*);
[[
  name: CudaSpatialFractionalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialFractionalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int outputW
    - int outputH
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaDoubleSpatialFractionalMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, THCudaLongTensor*);
[[
  name: CudaDoubleSpatialFractionalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialFractionalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int outputW
    - int outputH
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaHalfSpatialFullConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialFullConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialFullConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaSpatialFullConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialFullConvolution_updateOutput
  return: void
  cname: THNN_CudaSpatialFullConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleSpatialFullConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialFullConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialFullConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfSpatialFullConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfSpatialFullConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialFullConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaSpatialFullConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaSpatialFullConvolution_updateGradInput
  return: void
  cname: THNN_CudaSpatialFullConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleSpatialFullConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleSpatialFullConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialFullConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* columns
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfSpatialFullConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, float);
[[
  name: CudaHalfSpatialFullConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialFullConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaSpatialFullConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, float);
[[
  name: CudaSpatialFullConvolution_accGradParameters
  return: void
  cname: THNN_CudaSpatialFullConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaDoubleSpatialFullConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, double);
[[
  name: CudaDoubleSpatialFullConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialFullConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - int adjW
    - int adjH
    - double scale
]]


TH_API void THNN_CudaHalfSpatialMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaHalfSpatialMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
]]


TH_API void THNN_CudaSpatialMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaSpatialMaxPooling_updateOutput
  return: void
  cname: THNN_CudaSpatialMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
]]


TH_API void THNN_CudaDoubleSpatialMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleSpatialMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
]]


TH_API void THNN_CudaHalfSpatialMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaHalfSpatialMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
]]


TH_API void THNN_CudaSpatialMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaSpatialMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
]]


TH_API void THNN_CudaDoubleSpatialMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleSpatialMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int kH
    - int dW
    - int dH
    - int padW
    - int padH
    - bool ceil_mode
]]


TH_API void THNN_CudaHalfSpatialMaxUnpooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaHalfSpatialMaxUnpooling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialMaxUnpooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int owidth
    - int oheight
]]


TH_API void THNN_CudaSpatialMaxUnpooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaSpatialMaxUnpooling_updateOutput
  return: void
  cname: THNN_CudaSpatialMaxUnpooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int owidth
    - int oheight
]]


TH_API void THNN_CudaDoubleSpatialMaxUnpooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaDoubleSpatialMaxUnpooling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialMaxUnpooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int owidth
    - int oheight
]]


TH_API void THNN_CudaHalfSpatialMaxUnpooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaHalfSpatialMaxUnpooling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialMaxUnpooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int owidth
    - int oheight
]]


TH_API void THNN_CudaSpatialMaxUnpooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaSpatialMaxUnpooling_updateGradInput
  return: void
  cname: THNN_CudaSpatialMaxUnpooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int owidth
    - int oheight
]]


TH_API void THNN_CudaDoubleSpatialMaxUnpooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaDoubleSpatialMaxUnpooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialMaxUnpooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int owidth
    - int oheight
]]


TH_API void THNN_CudaHalfSpatialReflectionPadding_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfSpatialReflectionPadding_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialReflectionPadding_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaSpatialReflectionPadding_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaSpatialReflectionPadding_updateOutput
  return: void
  cname: THNN_CudaSpatialReflectionPadding_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaDoubleSpatialReflectionPadding_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleSpatialReflectionPadding_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialReflectionPadding_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaHalfSpatialReflectionPadding_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfSpatialReflectionPadding_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialReflectionPadding_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaSpatialReflectionPadding_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaSpatialReflectionPadding_updateGradInput
  return: void
  cname: THNN_CudaSpatialReflectionPadding_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaDoubleSpatialReflectionPadding_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleSpatialReflectionPadding_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialReflectionPadding_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaHalfSpatialReplicationPadding_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfSpatialReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaSpatialReplicationPadding_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaSpatialReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaSpatialReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaDoubleSpatialReplicationPadding_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleSpatialReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaHalfSpatialReplicationPadding_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfSpatialReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaSpatialReplicationPadding_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaSpatialReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaSpatialReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaDoubleSpatialReplicationPadding_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleSpatialReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int padL
    - int padR
    - int padT
    - int padB
]]


TH_API void THNN_CudaHalfSpatialSubSampling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfSpatialSubSampling_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialSubSampling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - int kW
    - int kH
    - int dW
    - int dH
]]


TH_API void THNN_CudaSpatialSubSampling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaSpatialSubSampling_updateOutput
  return: void
  cname: THNN_CudaSpatialSubSampling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - THCudaTensor* bias
    - int kW
    - int kH
    - int dW
    - int dH
]]


TH_API void THNN_CudaDoubleSpatialSubSampling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleSpatialSubSampling_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialSubSampling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - int kW
    - int kH
    - int dW
    - int dH
]]


TH_API void THNN_CudaHalfSpatialSubSampling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfSpatialSubSampling_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialSubSampling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - int kW
    - int kH
    - int dW
    - int dH
]]


TH_API void THNN_CudaSpatialSubSampling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaSpatialSubSampling_updateGradInput
  return: void
  cname: THNN_CudaSpatialSubSampling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - int kW
    - int kH
    - int dW
    - int dH
]]


TH_API void THNN_CudaDoubleSpatialSubSampling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleSpatialSubSampling_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialSubSampling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - int kW
    - int kH
    - int dW
    - int dH
]]


TH_API void THNN_CudaHalfSpatialSubSampling_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, float);
[[
  name: CudaHalfSpatialSubSampling_accGradParameters
  return: void
  cname: THNN_CudaHalfSpatialSubSampling_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - int kW
    - int kH
    - int dW
    - int dH
    - float scale
]]


TH_API void THNN_CudaSpatialSubSampling_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, float);
[[
  name: CudaSpatialSubSampling_accGradParameters
  return: void
  cname: THNN_CudaSpatialSubSampling_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - int kW
    - int kH
    - int dW
    - int dH
    - float scale
]]


TH_API void THNN_CudaDoubleSpatialSubSampling_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, double);
[[
  name: CudaDoubleSpatialSubSampling_accGradParameters
  return: void
  cname: THNN_CudaDoubleSpatialSubSampling_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - int kW
    - int kH
    - int dW
    - int dH
    - double scale
]]


TH_API void THNN_CudaHalfSpatialUpSamplingBilinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, bool);
[[
  name: CudaHalfSpatialUpSamplingBilinear_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialUpSamplingBilinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaSpatialUpSamplingBilinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, bool);
[[
  name: CudaSpatialUpSamplingBilinear_updateOutput
  return: void
  cname: THNN_CudaSpatialUpSamplingBilinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaDoubleSpatialUpSamplingBilinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, bool);
[[
  name: CudaDoubleSpatialUpSamplingBilinear_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialUpSamplingBilinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaHalfSpatialUpSamplingBilinear_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaHalfSpatialUpSamplingBilinear_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialUpSamplingBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputHeight
    - int inputWidth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaSpatialUpSamplingBilinear_updateGradInput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaSpatialUpSamplingBilinear_updateGradInput
  return: void
  cname: THNN_CudaSpatialUpSamplingBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputHeight
    - int inputWidth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaDoubleSpatialUpSamplingBilinear_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleSpatialUpSamplingBilinear_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialUpSamplingBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputHeight
    - int inputWidth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaHalfSpatialUpSamplingNearest_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfSpatialUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaSpatialUpSamplingNearest_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaSpatialUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaSpatialUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaDoubleSpatialUpSamplingNearest_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleSpatialUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaHalfSpatialUpSamplingNearest_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfSpatialUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaSpatialUpSamplingNearest_updateOutput(void*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaSpatialUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaSpatialUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaDoubleSpatialUpSamplingNearest_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleSpatialUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaHalfSpatialGridSamplerBilinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfSpatialGridSamplerBilinear_updateOutput
  return: void
  cname: THNN_CudaHalfSpatialGridSamplerBilinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* grid
    - THCudaHalfTensor* output
    - int padding_mode
]]


TH_API void THNN_CudaSpatialGridSamplerBilinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaSpatialGridSamplerBilinear_updateOutput
  return: void
  cname: THNN_CudaSpatialGridSamplerBilinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* grid
    - THCudaTensor* output
    - int padding_mode
]]


TH_API void THNN_CudaDoubleSpatialGridSamplerBilinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleSpatialGridSamplerBilinear_updateOutput
  return: void
  cname: THNN_CudaDoubleSpatialGridSamplerBilinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* grid
    - THCudaDoubleTensor* output
    - int padding_mode
]]


TH_API void THNN_CudaHalfSpatialGridSamplerBilinear_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfSpatialGridSamplerBilinear_updateGradInput
  return: void
  cname: THNN_CudaHalfSpatialGridSamplerBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* grid
    - THCudaHalfTensor* gradGrid
    - THCudaHalfTensor* gradOutput
    - int padding_mode
]]


TH_API void THNN_CudaSpatialGridSamplerBilinear_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaSpatialGridSamplerBilinear_updateGradInput
  return: void
  cname: THNN_CudaSpatialGridSamplerBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradInput
    - THCudaTensor* grid
    - THCudaTensor* gradGrid
    - THCudaTensor* gradOutput
    - int padding_mode
]]


TH_API void THNN_CudaDoubleSpatialGridSamplerBilinear_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleSpatialGridSamplerBilinear_updateGradInput
  return: void
  cname: THNN_CudaDoubleSpatialGridSamplerBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* grid
    - THCudaDoubleTensor* gradGrid
    - THCudaDoubleTensor* gradOutput
    - int padding_mode
]]


TH_API void THNN_CudaHalfVolumetricGridSamplerBilinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfVolumetricGridSamplerBilinear_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricGridSamplerBilinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* grid
    - THCudaHalfTensor* output
    - int padding_mode
]]


TH_API void THNN_CudaVolumetricGridSamplerBilinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaVolumetricGridSamplerBilinear_updateOutput
  return: void
  cname: THNN_CudaVolumetricGridSamplerBilinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* grid
    - THCudaTensor* output
    - int padding_mode
]]


TH_API void THNN_CudaDoubleVolumetricGridSamplerBilinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleVolumetricGridSamplerBilinear_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricGridSamplerBilinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* grid
    - THCudaDoubleTensor* output
    - int padding_mode
]]


TH_API void THNN_CudaHalfVolumetricGridSamplerBilinear_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfVolumetricGridSamplerBilinear_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricGridSamplerBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* grid
    - THCudaHalfTensor* gradGrid
    - THCudaHalfTensor* gradOutput
    - int padding_mode
]]


TH_API void THNN_CudaVolumetricGridSamplerBilinear_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaVolumetricGridSamplerBilinear_updateGradInput
  return: void
  cname: THNN_CudaVolumetricGridSamplerBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradInput
    - THCudaTensor* grid
    - THCudaTensor* gradGrid
    - THCudaTensor* gradOutput
    - int padding_mode
]]


TH_API void THNN_CudaDoubleVolumetricGridSamplerBilinear_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleVolumetricGridSamplerBilinear_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricGridSamplerBilinear_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* grid
    - THCudaDoubleTensor* gradGrid
    - THCudaDoubleTensor* gradOutput
    - int padding_mode
]]


TH_API void THNN_CudaHalfRReLU_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, double, double, bool, bool, void*);
[[
  name: CudaHalfRReLU_updateOutput
  return: void
  cname: THNN_CudaHalfRReLU_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* noise
    - double lower
    - double upper
    - bool train
    - bool inplace
    - void* generator
]]


TH_API void THNN_CudaRReLU_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, double, double, bool, bool, void*);
[[
  name: CudaRReLU_updateOutput
  return: void
  cname: THNN_CudaRReLU_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* noise
    - double lower
    - double upper
    - bool train
    - bool inplace
    - void* generator
]]


TH_API void THNN_CudaDoubleRReLU_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool, bool, void*);
[[
  name: CudaDoubleRReLU_updateOutput
  return: void
  cname: THNN_CudaDoubleRReLU_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* noise
    - double lower
    - double upper
    - bool train
    - bool inplace
    - void* generator
]]


TH_API void THNN_CudaHalfRReLU_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, double, double, bool, bool);
[[
  name: CudaHalfRReLU_updateGradInput
  return: void
  cname: THNN_CudaHalfRReLU_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* noise
    - double lower
    - double upper
    - bool train
    - bool inplace
]]


TH_API void THNN_CudaRReLU_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, double, double, bool, bool);
[[
  name: CudaRReLU_updateGradInput
  return: void
  cname: THNN_CudaRReLU_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* noise
    - double lower
    - double upper
    - bool train
    - bool inplace
]]


TH_API void THNN_CudaDoubleRReLU_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool, bool);
[[
  name: CudaDoubleRReLU_updateGradInput
  return: void
  cname: THNN_CudaDoubleRReLU_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* noise
    - double lower
    - double upper
    - bool train
    - bool inplace
]]


TH_API void THNN_CudaHalfSigmoid_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSigmoid_updateOutput
  return: void
  cname: THNN_CudaHalfSigmoid_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaSigmoid_updateOutput(void*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSigmoid_updateOutput
  return: void
  cname: THNN_CudaSigmoid_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleSigmoid_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSigmoid_updateOutput
  return: void
  cname: THNN_CudaDoubleSigmoid_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfSigmoid_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSigmoid_updateGradInput
  return: void
  cname: THNN_CudaHalfSigmoid_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaSigmoid_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSigmoid_updateGradInput
  return: void
  cname: THNN_CudaSigmoid_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleSigmoid_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSigmoid_updateGradInput
  return: void
  cname: THNN_CudaDoubleSigmoid_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfSoftMarginCriterion_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfSoftMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaHalfSoftMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaSoftMarginCriterion_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaSoftMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaSoftMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleSoftMarginCriterion_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleSoftMarginCriterion_updateOutput
  return: void
  cname: THNN_CudaDoubleSoftMarginCriterion_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* output
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfSoftMarginCriterion_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, bool, bool);
[[
  name: CudaHalfSoftMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaHalfSoftMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* target
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaSoftMarginCriterion_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, bool, bool);
[[
  name: CudaSoftMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaSoftMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* target
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaDoubleSoftMarginCriterion_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, bool, bool);
[[
  name: CudaDoubleSoftMarginCriterion_updateGradInput
  return: void
  cname: THNN_CudaDoubleSoftMarginCriterion_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* target
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - bool sizeAverage
    - bool reduce
]]


TH_API void THNN_CudaHalfSoftPlus_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfSoftPlus_updateOutput
  return: void
  cname: THNN_CudaHalfSoftPlus_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float beta
    - float threshold
]]


TH_API void THNN_CudaSoftPlus_updateOutput(void*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaSoftPlus_updateOutput
  return: void
  cname: THNN_CudaSoftPlus_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float beta
    - float threshold
]]


TH_API void THNN_CudaDoubleSoftPlus_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleSoftPlus_updateOutput
  return: void
  cname: THNN_CudaDoubleSoftPlus_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double beta
    - double threshold
]]


TH_API void THNN_CudaHalfSoftPlus_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float);
[[
  name: CudaHalfSoftPlus_updateGradInput
  return: void
  cname: THNN_CudaHalfSoftPlus_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* output
    - float beta
    - float threshold
]]


TH_API void THNN_CudaSoftPlus_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float);
[[
  name: CudaSoftPlus_updateGradInput
  return: void
  cname: THNN_CudaSoftPlus_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* output
    - float beta
    - float threshold
]]


TH_API void THNN_CudaDoubleSoftPlus_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double);
[[
  name: CudaDoubleSoftPlus_updateGradInput
  return: void
  cname: THNN_CudaDoubleSoftPlus_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* output
    - double beta
    - double threshold
]]


TH_API void THNN_CudaHalfSoftShrink_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float);
[[
  name: CudaHalfSoftShrink_updateOutput
  return: void
  cname: THNN_CudaHalfSoftShrink_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float lambda
]]


TH_API void THNN_CudaSoftShrink_updateOutput(void*, THCudaTensor*, THCudaTensor*, float);
[[
  name: CudaSoftShrink_updateOutput
  return: void
  cname: THNN_CudaSoftShrink_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float lambda
]]


TH_API void THNN_CudaDoubleSoftShrink_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double);
[[
  name: CudaDoubleSoftShrink_updateOutput
  return: void
  cname: THNN_CudaDoubleSoftShrink_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double lambda
]]


TH_API void THNN_CudaHalfSoftShrink_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float);
[[
  name: CudaHalfSoftShrink_updateGradInput
  return: void
  cname: THNN_CudaHalfSoftShrink_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - float lambda
]]


TH_API void THNN_CudaSoftShrink_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float);
[[
  name: CudaSoftShrink_updateGradInput
  return: void
  cname: THNN_CudaSoftShrink_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - float lambda
]]


TH_API void THNN_CudaDoubleSoftShrink_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double);
[[
  name: CudaDoubleSoftShrink_updateGradInput
  return: void
  cname: THNN_CudaDoubleSoftShrink_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - double lambda
]]


TH_API void THNN_CudaHalfSquare_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSquare_updateOutput
  return: void
  cname: THNN_CudaHalfSquare_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaSquare_updateOutput(void*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSquare_updateOutput
  return: void
  cname: THNN_CudaSquare_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleSquare_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSquare_updateOutput
  return: void
  cname: THNN_CudaDoubleSquare_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfSquare_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSquare_updateGradInput
  return: void
  cname: THNN_CudaHalfSquare_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
]]


TH_API void THNN_CudaSquare_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSquare_updateGradInput
  return: void
  cname: THNN_CudaSquare_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
]]


TH_API void THNN_CudaDoubleSquare_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSquare_updateGradInput
  return: void
  cname: THNN_CudaDoubleSquare_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
]]


TH_API void THNN_CudaHalfSqrt_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float);
[[
  name: CudaHalfSqrt_updateOutput
  return: void
  cname: THNN_CudaHalfSqrt_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float eps
]]


TH_API void THNN_CudaSqrt_updateOutput(void*, THCudaTensor*, THCudaTensor*, float);
[[
  name: CudaSqrt_updateOutput
  return: void
  cname: THNN_CudaSqrt_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float eps
]]


TH_API void THNN_CudaDoubleSqrt_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double);
[[
  name: CudaDoubleSqrt_updateOutput
  return: void
  cname: THNN_CudaDoubleSqrt_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double eps
]]


TH_API void THNN_CudaHalfSqrt_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfSqrt_updateGradInput
  return: void
  cname: THNN_CudaHalfSqrt_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaSqrt_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaSqrt_updateGradInput
  return: void
  cname: THNN_CudaSqrt_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleSqrt_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleSqrt_updateGradInput
  return: void
  cname: THNN_CudaDoubleSqrt_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfTanh_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfTanh_updateOutput
  return: void
  cname: THNN_CudaHalfTanh_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaTanh_updateOutput(void*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaTanh_updateOutput
  return: void
  cname: THNN_CudaTanh_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleTanh_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleTanh_updateOutput
  return: void
  cname: THNN_CudaDoubleTanh_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfTanh_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfTanh_updateGradInput
  return: void
  cname: THNN_CudaHalfTanh_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* output
]]


TH_API void THNN_CudaTanh_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaTanh_updateGradInput
  return: void
  cname: THNN_CudaTanh_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* output
]]


TH_API void THNN_CudaDoubleTanh_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleTanh_updateGradInput
  return: void
  cname: THNN_CudaDoubleTanh_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* output
]]


TH_API void THNN_CudaHalfTemporalConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int);
[[
  name: CudaHalfTemporalConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* bias
    - int kW
    - int dW
    - int inputFrameSize
    - int outputFrameSize
]]


TH_API void THNN_CudaTemporalConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int);
[[
  name: CudaTemporalConvolution_updateOutput
  return: void
  cname: THNN_CudaTemporalConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - THCudaTensor* bias
    - int kW
    - int dW
    - int inputFrameSize
    - int outputFrameSize
]]


TH_API void THNN_CudaDoubleTemporalConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int);
[[
  name: CudaDoubleTemporalConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* bias
    - int kW
    - int dW
    - int inputFrameSize
    - int outputFrameSize
]]


TH_API void THNN_CudaHalfTemporalConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int);
[[
  name: CudaHalfTemporalConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - int kW
    - int dW
]]


TH_API void THNN_CudaTemporalConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int);
[[
  name: CudaTemporalConvolution_updateGradInput
  return: void
  cname: THNN_CudaTemporalConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - int kW
    - int dW
]]


TH_API void THNN_CudaDoubleTemporalConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int);
[[
  name: CudaDoubleTemporalConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - int kW
    - int dW
]]


TH_API void THNN_CudaHalfTemporalConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, float);
[[
  name: CudaHalfTemporalConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfTemporalConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - int kW
    - int dW
    - float scale
]]


TH_API void THNN_CudaTemporalConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, float);
[[
  name: CudaTemporalConvolution_accGradParameters
  return: void
  cname: THNN_CudaTemporalConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - int kW
    - int dW
    - float scale
]]


TH_API void THNN_CudaDoubleTemporalConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, double);
[[
  name: CudaDoubleTemporalConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleTemporalConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - int kW
    - int dW
    - double scale
]]


TH_API void THNN_CudaHalfTemporalMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaHalfTemporalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int dW
]]


TH_API void THNN_CudaTemporalMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaTemporalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaTemporalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int dW
]]


TH_API void THNN_CudaDoubleTemporalMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaDoubleTemporalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int kW
    - int dW
]]


TH_API void THNN_CudaHalfTemporalMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaHalfTemporalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int dW
]]


TH_API void THNN_CudaTemporalMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaTemporalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaTemporalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int dW
]]


TH_API void THNN_CudaDoubleTemporalMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int);
[[
  name: CudaDoubleTemporalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int kW
    - int dW
]]


TH_API void THNN_CudaHalfTemporalRowConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, bool);
[[
  name: CudaHalfTemporalRowConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalRowConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
]]


TH_API void THNN_CudaTemporalRowConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, bool);
[[
  name: CudaTemporalRowConvolution_updateOutput
  return: void
  cname: THNN_CudaTemporalRowConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
]]


TH_API void THNN_CudaDoubleTemporalRowConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, bool);
[[
  name: CudaDoubleTemporalRowConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalRowConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
]]


TH_API void THNN_CudaHalfTemporalRowConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, bool);
[[
  name: CudaHalfTemporalRowConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalRowConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
]]


TH_API void THNN_CudaTemporalRowConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, bool);
[[
  name: CudaTemporalRowConvolution_updateGradInput
  return: void
  cname: THNN_CudaTemporalRowConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
]]


TH_API void THNN_CudaDoubleTemporalRowConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, bool);
[[
  name: CudaDoubleTemporalRowConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalRowConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
]]


TH_API void THNN_CudaHalfTemporalRowConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, bool, float);
[[
  name: CudaHalfTemporalRowConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfTemporalRowConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - THCudaHalfTensor* gradBias
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
    - float scale
]]


TH_API void THNN_CudaTemporalRowConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, bool, float);
[[
  name: CudaTemporalRowConvolution_accGradParameters
  return: void
  cname: THNN_CudaTemporalRowConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - THCudaTensor* gradBias
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
    - float scale
]]


TH_API void THNN_CudaDoubleTemporalRowConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, bool, double);
[[
  name: CudaDoubleTemporalRowConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleTemporalRowConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - THCudaDoubleTensor* gradBias
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kW
    - int dW
    - int padW
    - bool featFirst
    - double scale
]]


TH_API void THNN_CudaHalfTemporalReflectionPadding_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int);
[[
  name: CudaHalfTemporalReflectionPadding_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalReflectionPadding_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int padL
    - int padR
]]


TH_API void THNN_CudaTemporalReflectionPadding_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int);
[[
  name: CudaTemporalReflectionPadding_updateOutput
  return: void
  cname: THNN_CudaTemporalReflectionPadding_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int padL
    - int padR
]]


TH_API void THNN_CudaDoubleTemporalReflectionPadding_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int);
[[
  name: CudaDoubleTemporalReflectionPadding_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalReflectionPadding_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int padL
    - int padR
]]


TH_API void THNN_CudaHalfTemporalReflectionPadding_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int);
[[
  name: CudaHalfTemporalReflectionPadding_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalReflectionPadding_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int padL
    - int padR
]]


TH_API void THNN_CudaTemporalReflectionPadding_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int);
[[
  name: CudaTemporalReflectionPadding_updateGradInput
  return: void
  cname: THNN_CudaTemporalReflectionPadding_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int padL
    - int padR
]]


TH_API void THNN_CudaDoubleTemporalReflectionPadding_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int);
[[
  name: CudaDoubleTemporalReflectionPadding_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalReflectionPadding_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int padL
    - int padR
]]


TH_API void THNN_CudaHalfTemporalReplicationPadding_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int);
[[
  name: CudaHalfTemporalReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int padL
    - int padR
]]


TH_API void THNN_CudaTemporalReplicationPadding_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int);
[[
  name: CudaTemporalReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaTemporalReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int padL
    - int padR
]]


TH_API void THNN_CudaDoubleTemporalReplicationPadding_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int);
[[
  name: CudaDoubleTemporalReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int padL
    - int padR
]]


TH_API void THNN_CudaHalfTemporalReplicationPadding_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int);
[[
  name: CudaHalfTemporalReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int padL
    - int padR
]]


TH_API void THNN_CudaTemporalReplicationPadding_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int);
[[
  name: CudaTemporalReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaTemporalReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int padL
    - int padR
]]


TH_API void THNN_CudaDoubleTemporalReplicationPadding_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int);
[[
  name: CudaDoubleTemporalReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int padL
    - int padR
]]


TH_API void THNN_CudaHalfTemporalUpSamplingLinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, bool);
[[
  name: CudaHalfTemporalUpSamplingLinear_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalUpSamplingLinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaTemporalUpSamplingLinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, bool);
[[
  name: CudaTemporalUpSamplingLinear_updateOutput
  return: void
  cname: THNN_CudaTemporalUpSamplingLinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaDoubleTemporalUpSamplingLinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, bool);
[[
  name: CudaDoubleTemporalUpSamplingLinear_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalUpSamplingLinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaHalfTemporalUpSamplingLinear_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, bool);
[[
  name: CudaHalfTemporalUpSamplingLinear_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalUpSamplingLinear_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputWidth
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaTemporalUpSamplingLinear_updateGradInput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, bool);
[[
  name: CudaTemporalUpSamplingLinear_updateGradInput
  return: void
  cname: THNN_CudaTemporalUpSamplingLinear_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputWidth
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaDoubleTemporalUpSamplingLinear_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, bool);
[[
  name: CudaDoubleTemporalUpSamplingLinear_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalUpSamplingLinear_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputWidth
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaHalfTemporalUpSamplingNearest_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfTemporalUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaHalfTemporalUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaTemporalUpSamplingNearest_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaTemporalUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaTemporalUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaDoubleTemporalUpSamplingNearest_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleTemporalUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaDoubleTemporalUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaHalfTemporalUpSamplingNearest_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfTemporalUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaHalfTemporalUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaTemporalUpSamplingNearest_updateOutput(void*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaTemporalUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaTemporalUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaDoubleTemporalUpSamplingNearest_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleTemporalUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaDoubleTemporalUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaHalfThreshold_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, float, float, bool);
[[
  name: CudaHalfThreshold_updateOutput
  return: void
  cname: THNN_CudaHalfThreshold_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - float threshold
    - float val
    - bool inplace
]]


TH_API void THNN_CudaThreshold_updateOutput(void*, THCudaTensor*, THCudaTensor*, float, float, bool);
[[
  name: CudaThreshold_updateOutput
  return: void
  cname: THNN_CudaThreshold_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - float threshold
    - float val
    - bool inplace
]]


TH_API void THNN_CudaDoubleThreshold_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool);
[[
  name: CudaDoubleThreshold_updateOutput
  return: void
  cname: THNN_CudaDoubleThreshold_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - double threshold
    - double val
    - bool inplace
]]


TH_API void THNN_CudaHalfThreshold_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, float, float, bool);
[[
  name: CudaHalfThreshold_updateGradInput
  return: void
  cname: THNN_CudaHalfThreshold_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - float threshold
    - float val
    - bool inplace
]]


TH_API void THNN_CudaThreshold_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, float, float, bool);
[[
  name: CudaThreshold_updateGradInput
  return: void
  cname: THNN_CudaThreshold_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - float threshold
    - float val
    - bool inplace
]]


TH_API void THNN_CudaDoubleThreshold_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, double, double, bool);
[[
  name: CudaDoubleThreshold_updateGradInput
  return: void
  cname: THNN_CudaDoubleThreshold_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - double threshold
    - double val
    - bool inplace
]]


TH_API void THNN_CudaHalfVolumetricAveragePooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, bool, bool);
[[
  name: CudaHalfVolumetricAveragePooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaVolumetricAveragePooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, bool, bool);
[[
  name: CudaVolumetricAveragePooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaDoubleVolumetricAveragePooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, bool, bool);
[[
  name: CudaDoubleVolumetricAveragePooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaHalfVolumetricAveragePooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, bool, bool);
[[
  name: CudaHalfVolumetricAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaVolumetricAveragePooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, bool, bool);
[[
  name: CudaVolumetricAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaDoubleVolumetricAveragePooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, bool, bool);
[[
  name: CudaDoubleVolumetricAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceil_mode
    - bool count_include_pad
]]


TH_API void THNN_CudaHalfVolumetricConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaVolumetricConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int);
[[
  name: CudaVolumetricConvolution_updateOutput
  return: void
  cname: THNN_CudaVolumetricConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaDoubleVolumetricConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaHalfVolumetricConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* finput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaVolumetricConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int);
[[
  name: CudaVolumetricConvolution_updateGradInput
  return: void
  cname: THNN_CudaVolumetricConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* finput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaDoubleVolumetricConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* finput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaHalfVolumetricConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, float);
[[
  name: CudaHalfVolumetricConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfVolumetricConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - float scale
]]


TH_API void THNN_CudaVolumetricConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, float);
[[
  name: CudaVolumetricConvolution_accGradParameters
  return: void
  cname: THNN_CudaVolumetricConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - float scale
]]


TH_API void THNN_CudaDoubleVolumetricConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, double);
[[
  name: CudaDoubleVolumetricConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleVolumetricConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - double scale
]]


TH_API void THNN_CudaHalfVolumetricDilatedConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaVolumetricDilatedConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaVolumetricDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleVolumetricDilatedConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfVolumetricDilatedConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* columns
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaVolumetricDilatedConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaVolumetricDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* columns
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaDoubleVolumetricDilatedConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* columns
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
]]


TH_API void THNN_CudaHalfVolumetricDilatedConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaHalfVolumetricDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfVolumetricDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradWeight
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* columns
    - THCudaHalfTensor* ones
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - float scale
]]


TH_API void THNN_CudaVolumetricDilatedConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaVolumetricDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaVolumetricDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradWeight
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* columns
    - THCudaTensor* ones
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - float scale
]]


TH_API void THNN_CudaDoubleVolumetricDilatedConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int, double);
[[
  name: CudaDoubleVolumetricDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleVolumetricDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradWeight
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* columns
    - THCudaDoubleTensor* ones
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - double scale
]]


TH_API void THNN_CudaHalfVolumetricFullDilatedConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricFullDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricFullDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaVolumetricFullDilatedConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricFullDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaVolumetricFullDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleVolumetricFullDilatedConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricFullDilatedConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricFullDilatedConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfVolumetricFullDilatedConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricFullDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricFullDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaVolumetricFullDilatedConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricFullDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaVolumetricFullDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleVolumetricFullDilatedConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricFullDilatedConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricFullDilatedConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfVolumetricFullDilatedConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaHalfVolumetricFullDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfVolumetricFullDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - type: THCudaHalfTensor*
      name: gradWeight
      nullable: True
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaVolumetricFullDilatedConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaVolumetricFullDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaVolumetricFullDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - type: THCudaTensor*
      name: gradWeight
      nullable: True
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaDoubleVolumetricFullDilatedConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, double);
[[
  name: CudaDoubleVolumetricFullDilatedConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleVolumetricFullDilatedConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - type: THCudaDoubleTensor*
      name: gradWeight
      nullable: True
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - int adjT
    - int adjW
    - int adjH
    - double scale
]]


TH_API void THNN_CudaHalfVolumetricDilatedMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfVolumetricDilatedMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricDilatedMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - bool ceilMode
]]


TH_API void THNN_CudaVolumetricDilatedMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaVolumetricDilatedMaxPooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricDilatedMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - bool ceilMode
]]


TH_API void THNN_CudaDoubleVolumetricDilatedMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleVolumetricDilatedMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricDilatedMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - bool ceilMode
]]


TH_API void THNN_CudaHalfVolumetricDilatedMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfVolumetricDilatedMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricDilatedMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - bool ceilMode
]]


TH_API void THNN_CudaVolumetricDilatedMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaVolumetricDilatedMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricDilatedMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - bool ceilMode
]]


TH_API void THNN_CudaDoubleVolumetricDilatedMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleVolumetricDilatedMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricDilatedMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int dilationT
    - int dilationW
    - int dilationH
    - bool ceilMode
]]


TH_API void THNN_CudaHalfVolumetricFractionalMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, THCudaLongTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfVolumetricFractionalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricFractionalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int outputT
    - int outputW
    - int outputH
    - int poolSizeT
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
    - THCudaHalfTensor* randomSamples
]]


TH_API void THNN_CudaVolumetricFractionalMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, THCudaLongTensor*, THCudaTensor*);
[[
  name: CudaVolumetricFractionalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricFractionalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int outputT
    - int outputW
    - int outputH
    - int poolSizeT
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
    - THCudaTensor* randomSamples
]]


TH_API void THNN_CudaDoubleVolumetricFractionalMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, THCudaLongTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleVolumetricFractionalMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricFractionalMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int outputT
    - int outputW
    - int outputH
    - int poolSizeT
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
    - THCudaDoubleTensor* randomSamples
]]


TH_API void THNN_CudaHalfVolumetricFractionalMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, THCudaLongTensor*);
[[
  name: CudaHalfVolumetricFractionalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricFractionalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int outputT
    - int outputW
    - int outputH
    - int poolSizeT
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaVolumetricFractionalMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, THCudaLongTensor*);
[[
  name: CudaVolumetricFractionalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricFractionalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int outputT
    - int outputW
    - int outputH
    - int poolSizeT
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaDoubleVolumetricFractionalMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, THCudaLongTensor*);
[[
  name: CudaDoubleVolumetricFractionalMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricFractionalMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int outputT
    - int outputW
    - int outputH
    - int poolSizeT
    - int poolSizeW
    - int poolSizeH
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaHalfVolumetricFullConvolution_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricFullConvolution_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricFullConvolution_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaHalfTensor* weight
    - type: THCudaHalfTensor*
      name: bias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaVolumetricFullConvolution_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricFullConvolution_updateOutput
  return: void
  cname: THNN_CudaVolumetricFullConvolution_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaTensor* weight
    - type: THCudaTensor*
      name: bias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleVolumetricFullConvolution_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricFullConvolution_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricFullConvolution_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaDoubleTensor* weight
    - type: THCudaDoubleTensor*
      name: bias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfVolumetricFullConvolution_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricFullConvolution_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricFullConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaHalfTensor* weight
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaVolumetricFullConvolution_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricFullConvolution_updateGradInput
  return: void
  cname: THNN_CudaVolumetricFullConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaTensor* weight
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaDoubleVolumetricFullConvolution_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricFullConvolution_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricFullConvolution_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaDoubleTensor* weight
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
]]


TH_API void THNN_CudaHalfVolumetricFullConvolution_accGradParameters(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaHalfVolumetricFullConvolution_accGradParameters
  return: void
  cname: THNN_CudaHalfVolumetricFullConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - type: THCudaHalfTensor*
      name: gradWeight
      nullable: True
    - type: THCudaHalfTensor*
      name: gradBias
      nullable: True
    - THCudaHalfTensor* finput
    - THCudaHalfTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaVolumetricFullConvolution_accGradParameters(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, int, int, int, int, float);
[[
  name: CudaVolumetricFullConvolution_accGradParameters
  return: void
  cname: THNN_CudaVolumetricFullConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - type: THCudaTensor*
      name: gradWeight
      nullable: True
    - type: THCudaTensor*
      name: gradBias
      nullable: True
    - THCudaTensor* finput
    - THCudaTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
    - float scale
]]


TH_API void THNN_CudaDoubleVolumetricFullConvolution_accGradParameters(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, int, int, int, int, double);
[[
  name: CudaDoubleVolumetricFullConvolution_accGradParameters
  return: void
  cname: THNN_CudaDoubleVolumetricFullConvolution_accGradParameters
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - type: THCudaDoubleTensor*
      name: gradWeight
      nullable: True
    - type: THCudaDoubleTensor*
      name: gradBias
      nullable: True
    - THCudaDoubleTensor* finput
    - THCudaDoubleTensor* fgradInput
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - int adjT
    - int adjW
    - int adjH
    - double scale
]]


TH_API void THNN_CudaHalfVolumetricMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfVolumetricMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceilMode
]]


TH_API void THNN_CudaVolumetricMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaVolumetricMaxPooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceilMode
]]


TH_API void THNN_CudaDoubleVolumetricMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleVolumetricMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceilMode
]]


TH_API void THNN_CudaHalfVolumetricMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfVolumetricMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceilMode
]]


TH_API void THNN_CudaVolumetricMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaVolumetricMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceilMode
]]


TH_API void THNN_CudaDoubleVolumetricMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleVolumetricMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int kT
    - int kW
    - int kH
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
    - bool ceilMode
]]


TH_API void THNN_CudaHalfVolumetricMaxUnpooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricMaxUnpooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricMaxUnpooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int outputTime
    - int outputWidth
    - int outputHeight
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaVolumetricMaxUnpooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricMaxUnpooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricMaxUnpooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int outputTime
    - int outputWidth
    - int outputHeight
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaDoubleVolumetricMaxUnpooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricMaxUnpooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricMaxUnpooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int outputTime
    - int outputWidth
    - int outputHeight
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaHalfVolumetricMaxUnpooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricMaxUnpooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricMaxUnpooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
    - int outputTime
    - int outputWidth
    - int outputHeight
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaVolumetricMaxUnpooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int);
[[
  name: CudaVolumetricMaxUnpooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricMaxUnpooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
    - int outputTime
    - int outputWidth
    - int outputHeight
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaDoubleVolumetricMaxUnpooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricMaxUnpooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricMaxUnpooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
    - int outputTime
    - int outputWidth
    - int outputHeight
    - int dT
    - int dW
    - int dH
    - int padT
    - int padW
    - int padH
]]


TH_API void THNN_CudaHalfVolumetricAdaptiveMaxPooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*, int, int, int);
[[
  name: CudaHalfVolumetricAdaptiveMaxPooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricAdaptiveMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - THCudaLongTensor* indices
    - int osizeT
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaVolumetricAdaptiveMaxPooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*, int, int, int);
[[
  name: CudaVolumetricAdaptiveMaxPooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricAdaptiveMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - THCudaLongTensor* indices
    - int osizeT
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaDoubleVolumetricAdaptiveMaxPooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*, int, int, int);
[[
  name: CudaDoubleVolumetricAdaptiveMaxPooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricAdaptiveMaxPooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - THCudaLongTensor* indices
    - int osizeT
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaHalfVolumetricAdaptiveMaxPooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaLongTensor*);
[[
  name: CudaHalfVolumetricAdaptiveMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricAdaptiveMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaVolumetricAdaptiveMaxPooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, THCudaLongTensor*);
[[
  name: CudaVolumetricAdaptiveMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricAdaptiveMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaDoubleVolumetricAdaptiveMaxPooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaLongTensor*);
[[
  name: CudaDoubleVolumetricAdaptiveMaxPooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricAdaptiveMaxPooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - THCudaLongTensor* indices
]]


TH_API void THNN_CudaHalfVolumetricAdaptiveAveragePooling_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int);
[[
  name: CudaHalfVolumetricAdaptiveAveragePooling_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricAdaptiveAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int osizeT
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaVolumetricAdaptiveAveragePooling_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int);
[[
  name: CudaVolumetricAdaptiveAveragePooling_updateOutput
  return: void
  cname: THNN_CudaVolumetricAdaptiveAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int osizeT
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaDoubleVolumetricAdaptiveAveragePooling_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int);
[[
  name: CudaDoubleVolumetricAdaptiveAveragePooling_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricAdaptiveAveragePooling_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int osizeT
    - int osizeW
    - int osizeH
]]


TH_API void THNN_CudaHalfVolumetricAdaptiveAveragePooling_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*);
[[
  name: CudaHalfVolumetricAdaptiveAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricAdaptiveAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
]]


TH_API void THNN_CudaVolumetricAdaptiveAveragePooling_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*);
[[
  name: CudaVolumetricAdaptiveAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaVolumetricAdaptiveAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
]]


TH_API void THNN_CudaDoubleVolumetricAdaptiveAveragePooling_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*);
[[
  name: CudaDoubleVolumetricAdaptiveAveragePooling_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricAdaptiveAveragePooling_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
]]


TH_API void THNN_CudaHalfVolumetricReplicationPadding_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int pleft
    - int pright
    - int ptop
    - int pbottom
    - int pfront
    - int pback
]]


TH_API void THNN_CudaVolumetricReplicationPadding_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int);
[[
  name: CudaVolumetricReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaVolumetricReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int pleft
    - int pright
    - int ptop
    - int pbottom
    - int pfront
    - int pback
]]


TH_API void THNN_CudaDoubleVolumetricReplicationPadding_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricReplicationPadding_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricReplicationPadding_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int pleft
    - int pright
    - int ptop
    - int pbottom
    - int pfront
    - int pback
]]


TH_API void THNN_CudaHalfVolumetricReplicationPadding_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int);
[[
  name: CudaHalfVolumetricReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int pleft
    - int pright
    - int ptop
    - int pbottom
    - int pfront
    - int pback
]]


TH_API void THNN_CudaVolumetricReplicationPadding_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int);
[[
  name: CudaVolumetricReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaVolumetricReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int pleft
    - int pright
    - int ptop
    - int pbottom
    - int pfront
    - int pback
]]


TH_API void THNN_CudaDoubleVolumetricReplicationPadding_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int);
[[
  name: CudaDoubleVolumetricReplicationPadding_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricReplicationPadding_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int pleft
    - int pright
    - int ptop
    - int pbottom
    - int pfront
    - int pback
]]


TH_API void THNN_CudaHalfVolumetricUpSamplingNearest_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfVolumetricUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaVolumetricUpSamplingNearest_updateGradInput(void*, THCudaTensor*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaVolumetricUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaVolumetricUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaDoubleVolumetricUpSamplingNearest_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleVolumetricUpSamplingNearest_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricUpSamplingNearest_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int scale_factor
]]


TH_API void THNN_CudaHalfVolumetricUpSamplingNearest_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int);
[[
  name: CudaHalfVolumetricUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaVolumetricUpSamplingNearest_updateOutput(void*, THCudaTensor*, THCudaTensor*, int);
[[
  name: CudaVolumetricUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaVolumetricUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaDoubleVolumetricUpSamplingNearest_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int);
[[
  name: CudaDoubleVolumetricUpSamplingNearest_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricUpSamplingNearest_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int scale_factor
]]


TH_API void THNN_CudaHalfVolumetricUpSamplingTrilinear_updateOutput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, bool);
[[
  name: CudaHalfVolumetricUpSamplingTrilinear_updateOutput
  return: void
  cname: THNN_CudaHalfVolumetricUpSamplingTrilinear_updateOutput
  arguments:
    - void* state
    - THCudaHalfTensor* input
    - THCudaHalfTensor* output
    - int outputDepth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaVolumetricUpSamplingTrilinear_updateOutput(void*, THCudaTensor*, THCudaTensor*, int, int, int, bool);
[[
  name: CudaVolumetricUpSamplingTrilinear_updateOutput
  return: void
  cname: THNN_CudaVolumetricUpSamplingTrilinear_updateOutput
  arguments:
    - void* state
    - THCudaTensor* input
    - THCudaTensor* output
    - int outputDepth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaDoubleVolumetricUpSamplingTrilinear_updateOutput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, bool);
[[
  name: CudaDoubleVolumetricUpSamplingTrilinear_updateOutput
  return: void
  cname: THNN_CudaDoubleVolumetricUpSamplingTrilinear_updateOutput
  arguments:
    - void* state
    - THCudaDoubleTensor* input
    - THCudaDoubleTensor* output
    - int outputDepth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaHalfVolumetricUpSamplingTrilinear_updateGradInput(void*, THCudaHalfTensor*, THCudaHalfTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaHalfVolumetricUpSamplingTrilinear_updateGradInput
  return: void
  cname: THNN_CudaHalfVolumetricUpSamplingTrilinear_updateGradInput
  arguments:
    - void* state
    - THCudaHalfTensor* gradOutput
    - THCudaHalfTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputDepth
    - int inputHeight
    - int inputWidth
    - int outputDepth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaVolumetricUpSamplingTrilinear_updateGradInput(void*, THCudaTensor*, THCudaTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaVolumetricUpSamplingTrilinear_updateGradInput
  return: void
  cname: THNN_CudaVolumetricUpSamplingTrilinear_updateGradInput
  arguments:
    - void* state
    - THCudaTensor* gradOutput
    - THCudaTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputDepth
    - int inputHeight
    - int inputWidth
    - int outputDepth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


TH_API void THNN_CudaDoubleVolumetricUpSamplingTrilinear_updateGradInput(void*, THCudaDoubleTensor*, THCudaDoubleTensor*, int, int, int, int, int, int, int, int, bool);
[[
  name: CudaDoubleVolumetricUpSamplingTrilinear_updateGradInput
  return: void
  cname: THNN_CudaDoubleVolumetricUpSamplingTrilinear_updateGradInput
  arguments:
    - void* state
    - THCudaDoubleTensor* gradOutput
    - THCudaDoubleTensor* gradInput
    - int nbatch
    - int nchannels
    - int inputDepth
    - int inputHeight
    - int inputWidth
    - int outputDepth
    - int outputHeight
    - int outputWidth
    - bool align_corners
]]


